apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ template "postgres.fullname" . }}
          args:
            - "-c"
            - "tcp_keepalives_idle=600"
            - "-c"
            - "tcp_keepalives_interval=30"
            - "-c"
            - "tcp_keepalives_count=10"
          env:
            - name: "DEBUG"
              value: {{ .Values.debug | quote }}
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgres.fullname" . }}
                  key: "root_password"
            {{- with .Values.jupyterhub_db }}
            - name: "VRO_DB_JUPYTERHUB_USER"
              value: {{ .user | quote }}
            - name: "VRO_DB_JUPYTERHUB_DB"
              value: {{ .db | quote }}
            - name: "VRO_DB_JUPYTERHUB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "postgres"
                  key: "jupyterhub_password"
            {{- end }}
            {{- with .Values.lovelog_db }}
            - name: "VRO_DB_LOVELOG_USER"
              value: {{ .user | quote }}
            - name: "VRO_DB_LOVELOG_DB"
              value: {{ .db | quote }}
            - name: "VRO_DB_LOVELOG_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "postgres"
                  key: "lovelog_password"
            {{- end }}
            {{- with .Values.narrativelog_db }}
            - name: "VRO_DB_NARRATIVELOG_USER"
              value: {{ .user | quote }}
            - name: "VRO_DB_NARRATIVELOG_DB"
              value: {{ .db | quote }}
            - name: "VRO_DB_NARRATIVELOG_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "postgres"
                  key: "narrativelog_password"
            {{- end }}
            {{- with .Values.exposurelog_db }}
            - name: "VRO_DB_EXPOSURELOG_USER"
              value: {{ .user | quote }}
            - name: "VRO_DB_EXPOSURELOG_DB"
              value: {{ .db | quote }}
            - name: "VRO_DB_EXPOSURELOG_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "postgres"
                  key: "exposurelog_password"
            {{- end }}
            {{- with .Values.gafaelfawr_db }}
            - name: "VRO_DB_GAFAELFAWR_USER"
              value: {{ .user | quote }}
            - name: "VRO_DB_GAFAELFAWR_DB"
              value: {{ .db | quote }}
            - name: "VRO_DB_GAFAELFAWR_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "postgres"
                  key: "gafaelfawr_password"
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: "postgres"
              containerPort: 5432
          volumeMounts:
            - name: "storage"
              mountPath: "/var/lib/postgresql"
      imagePullSecrets:
        - name: "pull-secret"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ template "postgres.fullname" . }}-physpvc

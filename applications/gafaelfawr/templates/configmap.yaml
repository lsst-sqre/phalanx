{{/* Generate two versions of the ConfigMap, one using the sidecar proxy
     and the other using the separate Cloud SQL Proxy service. The second
     will be used for CronJobs and other lower-load services, avoiding the
     difficulty with coordinating stopping the Cloud SQL Proxy sidecar when
     a CronJob ends. */}}
{{- define "gafaelfawr.configMap" }}
    realm: {{ required "global.host must be set" .Values.global.host | quote }}
    {{- if .Values.config.loglevel }}
    logLevel: {{ .Values.config.loglevel | quote }}
    {{- else }}
    logLevel: {{ .Values.config.logLevel | quote }}
    {{- end }}
    sessionSecretFile: "/etc/gafaelfawr/secrets/session-secret"
    redisUrl: "redis://{{ template "gafaelfawr.fullname" . }}-redis.{{ .Release.Namespace }}:6379/0"
    redisPasswordFile: "/etc/gafaelfawr/secrets/redis-password"
    databasePasswordFile: "/etc/gafaelfawr/secrets/database-password"
    bootstrapTokenFile: "/etc/gafaelfawr/secrets/bootstrap-token"
    tokenLifetimeMinutes: {{ .Values.config.tokenLifetimeMinutes }}
    {{- with .Values.config.proxies }}
    proxies:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    afterLogoutUrl: {{ required "global.baseUrl must be set" .Values.global.baseUrl }}
    {{- if .Values.config.errorFooter }}
    errorFooter: {{ .Values.config.errorFooter | quote }}
    {{- end }}
    {{- if .Values.config.slackAlerts }}
    slackWebhookFile: "/etc/gafaelfawr/secrets/slack-webhook"
    {{- end }}

    {{- if .Values.config.github.clientId }}

    github:
      clientId: {{ .Values.config.github.clientId | quote }}
      clientSecretFile: "/etc/gafaelfawr/secrets/github-client-secret"

    {{- else if .Values.config.cilogon.clientId }}

    oidc:
      clientId: {{ .Values.config.cilogon.clientId | quote }}
      clientSecretFile: "/etc/gafaelfawr/secrets/cilogon-client-secret"
      {{- if .Values.config.cilogon.test }}
      loginUrl: "https://test.cilogon.org/authorize"
      tokenUrl: "https://test.cilogon.org/oauth2/token"
      issuer: "https://test.cilogon.org"
      {{- else }}
      loginUrl: "https://cilogon.org/authorize"
      tokenUrl: "https://cilogon.org/oauth2/token"
      issuer: "https://cilogon.org"
      {{- end }}
      {{- if .Values.config.cilogon.enrollmentUrl }}
      enrollmentUrl: {{ .Values.config.cilogon.enrollmentUrl | quote }}
      {{- end }}
      {{- with .Values.config.cilogon.loginParams }}
      loginParams:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      redirectUrl: "{{ .Values.global.baseUrl }}/login"
      scopes:
        - "email"
        - "org.cilogon.userinfo"
      audience: {{ .Values.config.cilogon.clientId | quote }}
      {{- if .Values.config.cilogon.usernameClaim }}
      usernameClaim: {{ .Values.config.cilogon.usernameClaim | quote }}
      {{- end }}
      {{- if .Values.config.cilogon.uidClaim }}
      uidClaim: {{ .Values.config.cilogon.uidClaim | quote }}
      {{- end }}
      {{- if .Values.config.cilogon.gidClaim }}
      gidClaim: {{ .Values.config.cilogon.gidClaim | quote }}
      {{- end }}
      {{- if .Values.config.cilogon.groupsClaim }}
      groupsClaim: {{ .Values.config.cilogon.groupsClaim | quote }}
      {{- end }}

    {{- else if .Values.config.oidc.clientId }}

    oidc:
      clientId: {{ .Values.config.oidc.clientId | quote }}
      clientSecretFile: "/etc/gafaelfawr/secrets/oidc-client-secret"
      {{- if .Values.config.oidc.audience }}
      audience: {{ .Values.config.oidc.audience | quote }}
      {{- else }}
      audience: {{ .Values.config.oidc.clientId | quote }}
      {{- end }}
      loginUrl: {{ required "config.oidc.loginUrl must be set" .Values.config.oidc.loginUrl | quote }}
      tokenUrl: {{ required "config.oidc.tokenUrl must be set" .Values.config.oidc.tokenUrl | quote }}
      {{- if .Values.config.oidc.enrollmentUrl }}
      enrollmentUrl: {{ .Values.config.oidc.enrollmentUrl | quote }}
      {{- end }}
      issuer: {{ required "config.oidc.issuer must be set" .Values.config.oidc.issuer | quote }}
      redirectUrl: "{{ .Values.global.baseUrl }}/login"
      {{- with .Values.config.oidc.scopes }}
      scopes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.config.oidc.loginParams }}
      loginParams:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.config.oidc.usernameClaim }}
      usernameClaim: {{ .Values.config.oidc.usernameClaim | quote }}
      {{- end }}
      {{- if .Values.config.oidc.uidClaim }}
      uidClaim: {{ .Values.config.oidc.uidClaim | quote }}
      {{- end }}
      {{- if .Values.config.oidc.gidClaim }}
      gidClaim: {{ .Values.config.oidc.gidClaim | quote }}
      {{- end }}
      {{- if .Values.config.oidc.groupsClaim }}
      groupsClaim: {{ .Values.config.oidc.groupsClaim | quote }}
      {{- end }}

    {{- end }}

    {{- if .Values.config.ldap.url }}
    ldap:
      url: {{ .Values.config.ldap.url | quote }}
      groupBaseDn: {{ required "config.ldap.groupBaseDn must be set" .Values.config.ldap.groupBaseDn | quote }}
      {{- if .Values.config.ldap.userDn }}
      userDn: {{ .Values.config.ldap.userDn | quote }}
      passwordFile: "/etc/gafaelfawr/secrets/ldap-password"
      {{- end }}
      {{- if .Values.config.ldap.kerberosConfig }}
      useKerberos: true
      {{- end }}
      groupObjectClass: {{ .Values.config.ldap.groupObjectClass | quote }}
      groupMemberAttr: {{ .Values.config.ldap.groupMemberAttr | quote }}
      {{- if .Values.config.ldap.userBaseDn }}
      userBaseDn: {{ .Values.config.ldap.userBaseDn | quote }}
      userSearchAttr: {{ .Values.config.ldap.userSearchAttr | quote }}
      nameAttr: {{ .Values.config.ldap.nameAttr | quote }}
      emailAttr: {{ .Values.config.ldap.emailAttr | quote }}
      {{- if .Values.config.ldap.uidAttr }}
      uidAttr: {{ .Values.config.ldap.uidAttr | quote }}
      {{- end }}
      {{- if .Values.config.ldap.gidAttr }}
      gidAttr: {{ .Values.config.ldap.gidAttr | quote }}
      {{- end }}
      {{- end }}
      {{- if .Values.config.ldap.addUserGroup }}
      addUserGroup: true
      {{- end }}
    {{- end }}

    {{- if .Values.config.firestore.project }}
    firestore:
      project: {{ .Values.config.firestore.project | quote }}
    {{- end }}

    {{- if .Values.config.forgerock.url }}
    forgerock:
      url: {{ .Values.config.forgerock.url | quote }}
      username: {{ .Values.config.forgerock.username | quote }}
      passwordFile: "/etc/gafaelfawr/secrets/forgerock-password"
    {{- end }}

    {{- if .Values.config.oidcServer.enabled }}
    oidcServer:
      issuer: "https://{{ .Values.global.host }}"
      keyId: "gafaelfawr"
      audience: "https://{{ .Values.global.host }}"
      keyFile: "/etc/gafaelfawr/secrets/signing-key"
      secretsFile: "/etc/gafaelfawr/secrets/oidc-server-secrets"
    {{- end }}

    {{- with .Values.config.quota }}
    quota:
      {{- toYaml . | nindent 6 }}
    {{- end }}

    {{- with .Values.config.initialAdmins }}
    initialAdmins:
      {{- toYaml . | nindent 6 }}
    {{- end }}

    {{- with .Values.config.knownScopes }}
    knownScopes:
      {{- toYaml . | nindent 6 }}
    {{- end }}

    {{- with .Values.config.groupMapping }}
    groupMapping:
      {{- toYaml . | nindent 6 }}
    {{- end }}
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "gafaelfawr.fullname" . }}-config
  labels:
    {{- include "gafaelfawr.labels" . | nindent 4 }}
data:
  gafaelfawr.yaml: |
    {{- if .Values.cloudsql.enabled }}
    databaseUrl: "postgresql://gafaelfawr@cloud-sql-proxy/gafaelfawr"
    {{- else }}
    databaseUrl: {{ required "config.databaseUrl must be set" .Values.config.databaseUrl | quote }}
    {{- end }}
    {{- template "gafaelfawr.configMap" . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "gafaelfawr.fullname" . }}-config-sidecar
  labels:
    {{- include "gafaelfawr.labels" . | nindent 4 }}
data:
  gafaelfawr.yaml: |
    {{- if .Values.cloudsql.enabled }}
    databaseUrl: "postgresql://gafaelfawr@localhost/gafaelfawr"
    {{- else }}
    databaseUrl: {{ required "config.databaseUrl must be set" .Values.config.databaseUrl | quote }}
    {{- end }}
    {{- template "gafaelfawr.configMap" . }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "noteburst.fullname" . }}-metrics
  labels:
    {{- include "noteburst.labels" . | nindent 4 }}
    app.kubernetes.io/component: "periodic-metrics"
    app.kubernetes.io/part-of: "noteburst"
spec:
  schedule: {{ .Values.periodicMetrics.schedule | quote }}
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "noteburst.selectorLabels" . | nindent 12 }}
            noteburst-redis-client: "true"
            app.kubernetes.io/component: "periodic-metrics"
            app.kubernetes.io/part-of: "noteburst"
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: {{ include "noteburst.serviceAccountName" . }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          restartPolicy: "Never"
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["noteburst_publish_periodic_metrics"]
              resources:
                {{- toYaml .Values.periodicMetrics.resources | nindent 16 }}
              envFrom:
                - configMapRef:
                    name: {{ include "noteburst.fullname" . }}-metrics
              env:
                {{- if .Values.config.sentry.enabled }}
                - name: "SENTRY_DSN"
                  valueFrom:
                    secretKeyRef:
                      name: {{ template "noteburst.fullname" . }}
                      key: "sentry-dsn"
                - name: "SENTRY_ENVIRONMENT"
                  value: {{ .Values.global.environmentName | quote }}
                - name: "SENTRY_TRACES_SAMPLE_RATE"
                  value: {{ .Values.config.sentry.tracesSampleRate | quote }}
                {{- end }}
                {{- if .Values.config.metrics.enabled }}
                - name: "KAFKA_BOOTSTRAP_SERVERS"
                  valueFrom:
                    secretKeyRef:
                      name: "noteburst-kafka"
                      key: "bootstrapServers"
                - name: "KAFKA_SECURITY_PROTOCOL"
                  valueFrom:
                    secretKeyRef:
                      name: "noteburst-kafka"
                      key: "securityProtocol"
                - name: "KAFKA_CLIENT_CERT_PATH"
                  value: "/etc/noteburst-kafka/user.crt"
                - name: "KAFKA_CLIENT_KEY_PATH"
                  value: "/etc/noteburst-kafka/user.key"
                - name: "KAFKA_CLUSTER_CA_PATH"
                  value: "/etc/noteburst-kafka/ca.crt"
                {{- end }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              {{- if .Values.config.metrics.enabled }}
              volumeMounts:
                - name: "kafka"
                  mountPath: "/etc/noteburst-kafka/ca.crt"
                  readOnly: true
                  subPath: "ssl.truststore.crt"
                - name: "kafka"
                  mountPath: "/etc/noteburst-kafka/user.crt"
                  readOnly: true
                  subPath: "ssl.keystore.crt"
                - name: "kafka"
                  mountPath: "/etc/noteburst-kafka/user.key"
                  readOnly: true
                  subPath: "ssl.keystore.key"
              {{- end }}
          {{- if .Values.config.metrics.enabled }}
          volumes:
            - name: "kafka"
              secret:
                secretName: "noteburst-kafka"
          {{- end }}

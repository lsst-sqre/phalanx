# Default values for noteburst.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# Global parameters will be set by parameters injected by Argo CD and should
# not be set in the individual environment values files.
global:
  # -- Base URL for the environment
  # @default -- Set by Argo CD
  baseUrl: ""

  # -- Host name for ingress
  # @default -- Set by Argo CD
  host: ""

  # -- Base path for Vault secrets
  # @default -- Set by Argo CD
  vaultSecretsPath: ""

# -- Number of API pods to run
replicaCount: 1

image:
  # -- Noteburst image repository
  repository: ghcr.io/lsst-sqre/noteburst

  # -- Image pull policy
  pullPolicy: IfNotPresent

  # -- Tag of the image
  # @default -- The appVersion of the chart
  tag: ""

# -- Secret names to use for all Docker pulls
imagePullSecrets: []

# -- Override the base name for resources
nameOverride: ""

# -- Override the full name for resources (includes the release name)
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- Annotations to add to the service account
  annotations: {}

  # The name of the service account to use.
  # @default -- Generated using the fullname template
  name: ""

# -- Annotations for API and worker pods
podAnnotations: {}

service:
  # -- Type of service to create
  type: ClusterIP

  # -- Port of the service to create and map to the ingress
  port: 80

ingress:
  # -- Additional annotations to add to the ingress
  annotations: {}

  # -- Path prefix where noteburst is hosted
  path: "/noteburst"

# -- Resource requests and limits for noteburst
# @default -- See `values.yaml`
resources:
  # -- Resource limits and requests for the noteburst FastAPI pods
  noteburst:
    limits:
      cpu: "1"
      memory: "512Mi"
    requests:
      cpu: "2m"
      memory: "128Mi"
  # -- Resource limits and requests for the noteburst arq worker FastAPI pods
  noteburstWorker:
    limits:
      cpu: "1"
      memory: "4000Mi"
    requests:
      cpu: "2m"
      memory: "256Mi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  # -- Logging level: "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"
  logLevel: "INFO"

  # -- URL path prefix for the JupyterHub service
  hubPathPrefix: "/nb"

  # -- URL path prefix for the Nublado JupyterLab Controller service
  nubladoControllerPathPrefix: "/nublado"

  worker:
    # -- Science Platform user identities that workers can acquire. Each item
    # is an object with username and uuid keys
    identities: []

    # -- Number of workers to run
    workerCount: 1

    # -- The default notebook execution timeout, in seconds.
    jobTimeout: 300

    # -- Max number of concurrent notebook executions per worker
    maxConcurrentJobs: 1

    # -- Worker token lifetime, in seconds.
    tokenLifetime: "2419200"

    # -- Nublado2 worker account's token scopes as a comma-separated list.
    tokenScopes: "exec:notebook,read:image,read:tap,read:alertdb"

    # -- Nublado image stream to select: "recommended", "weekly" or "reference"
    imageSelector: "recommended"

    # -- Nublado image reference, applicable when imageSelector is "reference"
    imageReference: ""

    # -- Worker keep alive mode: "normal", "fast", "disabled"
    keepAlive: "normal"

redis:
  persistence:
    # -- Whether to persist Redis storage and thus tokens. Setting this to
    # false will use `emptyDir` and reset data on every restart. Only
    # use this for a test deployment.
    enabled: true

    # -- Amount of persistent storage to request
    size: "8Gi"

    # -- Class of storage to request
    storageClass: ""

    # -- Use an existing PVC, not dynamic provisioning. If this is set, the
    # size, storageClass, and accessMode settings are ignored.
    volumeClaimName: ""

  # -- Resource limits and requests for the Redis pod
  # @default -- See `values.yaml`
  resources:
    limits:
      cpu: "1"
      memory: "4Gi"
    requests:
      cpu: "2m"
      memory: "512Mi"

  # -- Pod annotations for the Redis pod
  podAnnotations: {}

  # -- Node selection rules for the Redis pod
  nodeSelector: {}

  # -- Tolerations for the Redis pod
  tolerations: []

  # -- Affinity rules for the Redis pod
  affinity: {}

  {{- range $topic := .Values.topics }}
  ---
  apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
  kind: KafkaTopic
  metadata:
    name: "{{ $topic }}"
    labels:
      strimzi.io/cluster: "{{ .Values.clusterName }}"
  spec:
    partitions: {{ .Values.topicPartitions }}
    replicas: {{ .Values.topicReplicas }}
    config:
      cleanup.policy: "delete"
      retention.ms: {{ .Values.maxMillisecondsRetained }} # 7 days
      retention.bytes: {{ .Values.maxBytesRetained }}
  {{- end }}

apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: "{{ .Values.clusterName }}"
  name: "{{ .Values.testTopicName}}"
spec:
  config:
    cleanup.policy: "delete"
    retention.ms: {{ .Values.maxMillisecondsRetained }} # 7 days
    retention.bytes: {{ .Values.maxBytesRetained }}
    compression.type: {{ .Values.topicCompression}}
    # The default timestamp is the creation time of the alert.
    # To get the ingestion rate, we need this to be the log
    # append time, and the header will contain the producer
    # timestamp instead
    message.timestamp.type: 'LogAppendTime'
  partitions: {{ .Values.topicPartitions }}
  replicas: {{ .Values.topicReplicas }}
---
apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: "{{ .Values.clusterName }}"
  name: "{{ .Values.simulatedTopicName}}"
spec:
  config:
    cleanup.policy: "delete"
    retention.ms: {{ .Values.maxMillisecondsRetained }} # 7 days
    retention.bytes: {{ .Values.maxBytesRetained }}
    compression.type: {{ .Values.topicCompression}}
    message.timestamp.type: 'LogAppendTime'
  partitions: {{ .Values.simulatedTopicPartitions }}
  replicas: {{ .Values.simulatedTopicReplicas }}
---
apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: "{{ .Values.clusterName }}"
  name: "{{ .Values.latissTopicName}}"
spec:
  config:
    cleanup.policy: "delete"
    retention.ms: {{ .Values.maxMillisecondsRetained }} # 7 days
    retention.bytes: {{ .Values.maxBytesRetained }}
    compression.type: {{ .Values.topicCompression}}
    message.timestamp.type: 'LogAppendTime'
  partitions: {{ .Values.latissTopicPartitions }}
  replicas: {{ .Values.latissTopicReplicas }}
---
apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: "{{ .Values.clusterName }}"
  name: "{{ .Values.lsstcamTopicName74}}"
spec:
  config:
    cleanup.policy: "delete"
    retention.ms: {{ .Values.lsstcamMaxMillisecondsRetained74 }} # 7 days
    retention.bytes: {{ .Values.lsstcamMaxBytesRetained74 }}
    compression.type: {{ .Values.topicCompression }}
    message.timestamp.type: 'LogAppendTime'
  partitions: {{ .Values.lsstcamTopicPartitions74 }}
  replicas: {{ .Values.lsstcamTopicReplicas74 }}
---
apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: "{{ .Values.clusterName }}"
  name: "{{ .Values.lsstcamTopicName90}}"
spec:
  config:
    cleanup.policy: "delete"
    retention.ms: {{ .Values.lsstcamMaxMillisecondsRetained90 }} # 7 days
    retention.bytes: {{ .Values.lsstcamMaxBytesRetained90 }}
    compression.type: {{ .Values.topicCompression }}
    message.timestamp.type: 'LogAppendTime'
  partitions: {{ .Values.lsstcamTopicPartitions90 }}
  replicas: {{ .Values.lsstcamTopicReplicas90 }}
---
apiVersion: "kafka.strimzi.io/{{ .Values.strimziAPIVersion }}"
kind: KafkaTopic
metadata:
  labels:
    strimzi.io/cluster: "{{ .Values.clusterName }}"
  name: "{{ .Values.lsstcamTopicNameMDC}}"
spec:
  config:
    cleanup.policy: "delete"
    retention.ms: {{ .Values.lsstcamMaxMillisecondsRetainedMDC }} # 7 days
    retention.bytes: {{ .Values.lsstcamMaxBytesRetainedMDC }}
    compression.type: {{ .Values.topicCompression }}
    message.timestamp.type: 'LogAppendTime'
  partitions: {{ .Values.lsstcamTopicPartitionsMDC }}
  replicas: {{ .Values.lsstcamTopicReplicasMDC }}

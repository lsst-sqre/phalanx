strimzi-kafka:
  kafka:
    storage:
      storageClassName: rook-ceph-block
    externalListener:
      tls:
        enabled: true
      bootstrap:
        loadBalancerIP: "139.229.180.2"
        host: sasquatch-summit-kafka-bootstrap.lsst.codes
      brokers:
        - broker: 6
          loadBalancerIP: "139.229.180.8"
          host: sasquatch-summit-kafka-6.lsst.codes
          annotations:
            metallb.universe.tf/address-pool: lhn
        - broker: 7
          loadBalancerIP: "139.229.180.9"
          host: sasquatch-summit-kafka-7.lsst.codes
          annotations:
            metallb.universe.tf/address-pool: lhn
        - broker: 8
          loadBalancerIP: "139.229.180.10"
          host: sasquatch-summit-kafka-8.lsst.codes
          annotations:
            metallb.universe.tf/address-pool: lhn
    resources:
      requests:
        memory: 32Gi
        cpu: 4
      limits:
        memory: 32Gi
        cpu: 4
  kraft:
    enabled: true
  kafkaController:
    enabled: true
    resources:
      requests:
        memory: 8Gi
        cpu: "2"
      limits:
        memory: 8Gi
        cpu: "2"
  users:
    tsSalKafka:
      enabled: true
    camera:
      enabled: true
    replicator:
      enabled: true
    kafdrop:
      enabled: true
    telegraf:
      enabled: true
    kafkaConnectManager:
      enabled: true
    consdb:
      enabled: true
  registry:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hostname: summit-lsp.lsst.codes
      path: /schema-registry(/|$)(.*)
  cruiseControl:
    enabled: true
  brokerStorage:
    enabled: true
    storageClassName: localdrive
    size: 15Ti
    migration:
      enabled: false
      rebalance: false
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - yagan17
                    - yagan18
                    - yagan19
influxdb:
  persistence:
    storageClass: rook-ceph-block
    size: 5Ti
  ingress:
    enabled: true
    hostname: summit-lsp.lsst.codes
  resources:
    requests:
      memory: 128Gi
      cpu: 16
    limits:
      memory: 128Gi
      cpu: 16

influxdb-enterprise:
  enabled: true
  license:
    secret:
      name: sasquatch
      key: influxdb-enterprise-license
  meta:
    ingress:
      enabled: true
      hostname: summit-lsp.lsst.codes
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 16Gi
    sharedSecret:
      secret:
        name: sasquatch
        key: influxdb-enterprise-shared-secret
    resources:
      requests:
        memory: 2Gi
        cpu: 2
      limits:
        memory: 4Gi
        cpu: 4
  data:
    replicas: 1
    ingress:
      enabled: true
      hostname: summit-lsp.lsst.codes
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      storageClass: localdrive
      size: 15Ti
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - yagan20
    # -- InfluxDB Enterprise data pod resources, 16 cores single node license
    resources:
      requests:
        memory: 256Gi
        cpu: 16
      limits:
        memory: 256Gi
        cpu: 16

kafka-connect-manager:
  influxdbSink:
    # Based on the kafka producers configuration for the Summit
    # https://github.com/lsst-ts/argocd-csc/blob/main/apps/kafka-producers/values-summit.yaml
    connectors:
      auxtel:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS"
      maintel:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg"
      mtmount:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTMount"
        tasksMax: "8"
      comcam:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*CCCamera|.*CCHeaderService|.*CCOODS"
      eas:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*DIMM|.*DSM|.*EPM|.*ESS|.*HVAC|.*WeatherForecast"
      latiss:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*ATCamera|.*ATHeaderService|.*ATOODS|.*ATSpectrograph"
      m1m3:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTM1M3"
        tasksMax: "8"
      m2:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTHexapod|.*MTM2|.*MTRotator"
      obssys:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*Scheduler|.*Script|.*ScriptQueue|.*Watcher"
      ocps:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*OCPS"
      test:
        enabled: true
        topicsRegex: "lsst.sal.Test"
      pmd:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*PMD"
      calsys:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*ATMonochromator|.*ATWhiteLight|.*CBP|.*Electrometer|.*FiberSpectrograph|.*LinearStage|.*TunableLaser"
      mtaircompressor:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTAirCompressor"
      genericcamera:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*GCHeaderService|.*GenericCamera"
      gis:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*GIS"
      mtvms:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTVMS"
      lasertracker:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*LaserTracker"
      lsstcam:
        enabled: true
        repairerConnector: false
        topicsRegex: "lsst.sal.MTCamera|lsst.sal.MTHeaderService|lsst.sal.MTOODS"

telegraf-kafka-consumer-oss:
  enabled: true
  kafkaConsumers:
    oss-backpack:
      enabled: true
      replicaCount: 1
      database: "lsst.backpack"
      timestamp_format: "unix"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.backpack" ]
    oss-atcamera:
      enabled: true
      replicaCount: 1
      database: "lsst.ATCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Location", "Raft", "Reb", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.ATCamera" ]
    oss-cccamera:
      enabled: true
      replicaCount: 1
      database: "lsst.CCCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Cold", "Cryo", "Hardware", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.CCCamera" ]
    oss-mtcamera:
      enabled: true
      replicaCount: 1
      database: "lsst.MTCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Axis", "Canbus", "Cip", "Clamp", "Cold", "Controller", "Cryo", "Gateway", "Hardware", "Hip", "Hook", "Latch", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Socket", "Source", "Truck" ]
      topicRegexps: |
        [ "lsst.MTCamera" ]
    oss-obsenv:
      enabled: true
      database: "lsst.obsenv"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.obsenv" ]
      debug: true
    oss-cp:
      enabled: true
      database: "lsst.cp"
      timestamp_format: "unix"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.cp" ]
      tags: |
        [ "dataset_tag", "band", "instrument", "skymap", "detector", "physical_filter", "tract", "exposure", "patch", "visit", "run", "pipeline" ]
      debug: true

telegraf-kafka-consumer:
  enabled: true
  influxdb:
    url: "http://sasquatch-influxdb-enterprise-data.sasquatch:8086"
  kafkaConsumers:
    backpack:
      enabled: true
      replicaCount: 1
      database: "lsst.backpack"
      timestamp_format: "unix"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.backpack" ]
      debug: true
    # CSC connectors
    maintel:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTAOS", "lsst.sal.MTDome", "lsst.sal.MTDomeTrajectory", "lsst.sal.MTPtg" ]
      debug: true
    mtmount:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTMount" ]
      debug: true
    comcam:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.CCCamera", "lsst.sal.CCHeaderService", "lsst.sal.CCOODS" ]
      debug: true
    eas:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
         [ "lsst.sal.DIMM", "lsst.sal.DSM", "lsst.sal.EPM", "lsst.sal.ESS", "lsst.sal.HVAC", "lsst.sal.WeatherForecast" ]
      debug: true
    m1m3:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTM1M3" ]
      debug: true
    m2:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTHexapod", "lsst.sal.MTM2", "lsst.sal.MTRotator" ]
      debug: true
    obssys:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Scheduler", "lsst.sal.Script", "lsst.sal.ScriptQueue", "lsst.sal.Watcher" ]
      debug: true
    ocps:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.OCPS" ]
      debug: true
    pmd:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.PMD" ]
      debug: true
    calsys:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATMonochromator", "lsst.sal.ATWhiteLight", "lsst.sal.CBP", "lsst.sal.Electrometer", "lsst.sal.FiberSpectrograph", "lsst.sal.LinearStage", "lsst.sal.TunableLaser" ]
      debug: true
    mtaircompressor:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTAirCompressor" ]
      debug: true
    genericcamera:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.GCHeaderService", "lsst.sal.GenericCamera" ]
      debug: true
    gis:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.GIS" ]
      debug: true
    lsstcam:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTCamera", "lsst.sal.MTHeaderService", "lsst.sal.MTOODS" ]
      debug: true
    auxtel:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATAOS", "lsst.sal.ATDome", "lsst.sal.ATDomeTrajectory", "lsst.sal.ATHexapod", "lsst.sal.ATPneumatics", "lsst.sal.ATPtg", "lsst.sal.ATMCS" ]
      debug: true
    latiss:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATCamera", "lsst.sal.ATHeaderService", "lsst.sal.ATOODS", "lsst.sal.ATSpectrograph" ]
      debug: true
    test:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Test" ]
      debug: true
    lasertracker:
      enabled: true
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.LaserTracker" ]
      debug: true
    # CCS connectors (experimental) data is being written on separate databases for now
    atcamera:
      enabled: true
      database: "lsst.ATCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Location", "Raft", "Reb", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.ATCamera" ]
      debug: true
    cccamera:
      enabled: true
      database: "lsst.CCCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Cold", "Cryo", "Hardware", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.CCCamera" ]
      debug: true
    mtcamera:
      enabled: true
      database: "lsst.MTCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Axis", "Canbus", "Cip", "Clamp", "Cold", "Controller", "Cryo", "Gateway", "Hardware", "Hip", "Hook", "Latch", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Socket", "Source", "Truck" ]
      topicRegexps: |
        [ "lsst.MTCamera" ]
      debug: true


kafdrop:
  ingress:
    enabled: true
    hostname: summit-lsp.lsst.codes

rest-proxy:
  enabled: true
  ingress:
    enabled: true
    hostname: summit-lsp.lsst.codes
  configurationOverrides:
    "access.control.allow.origin": https://summit-lsp.lsst.codes/love,http://love01.cp.lsst.org
  kafka:
    topicPrefixes:
      - lsst.dm
      - lsst.backpack
      - lsst.obsenv
      - lsst.cp
      - lsst.ATCamera
      - lsst.CCCamera
      - lsst.MTCamera

chronograf:
  persistence:
    storageClass: rook-ceph-block
  ingress:
    enabled: true
    hostname: summit-lsp.lsst.codes
  env:
    GENERIC_NAME: "OIDC"
    GENERIC_AUTH_URL: https://summit-lsp.lsst.codes/auth/openid/login
    GENERIC_TOKEN_URL: https://summit-lsp.lsst.codes/auth/openid/token
    USE_ID_TOKEN: 1
    JWKS_URL: https://summit-lsp.lsst.codes/.well-known/jwks.json
    GENERIC_API_URL: https://summit-lsp.lsst.codes/auth/openid/userinfo
    GENERIC_SCOPES: openid
    GENERIC_API_KEY: sub
    PUBLIC_URL: https://summit-lsp.lsst.codes
    STATUS_FEED_URL: https://raw.githubusercontent.com/lsst-sqre/rsp_broadcast/main/jsonfeeds/summit.json

kapacitor:
  persistence:
    storageClass: rook-ceph-block

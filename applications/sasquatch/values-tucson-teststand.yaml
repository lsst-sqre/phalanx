strimzi-kafka:
  cluster:
    monitorLabel:
      lsst.io/monitor: "true"
  kafka:
    storage:
      storageClassName: rook-ceph-block
    externalListener:
      tls:
        enabled: true
      bootstrap:
        loadBalancerIP: "140.252.146.59"
        host: sasquatch-tts-kafka-bootstrap.lsst.codes
      brokers:
        - broker: 0
          loadBalancerIP: "140.252.146.46"
          host: sasquatch-tts-kafka-0.lsst.codes
        - broker: 1
          loadBalancerIP: "140.252.146.58"
          host: sasquatch-tts-kafka-1.lsst.codes
        - broker: 2
          loadBalancerIP: "140.252.146.47"
          host: sasquatch-tts-kafka-2.lsst.codes
    resources:
      requests:
        memory: 80Gi
        cpu: 4
      limits:
        memory: 80Gi
        cpu: 4
    metricsConfig:
      enabled: true
  kafkaExporter:
    enabled: true
    enableSaramaLogging: true
    resources:
      requests:
        cpu: 200m
        memory: 64Mi
      limits:
        cpu: 500m
        memory: 128Mi
  users:
    tsSalKafka:
      enabled: true
    kafdrop:
      enabled: true
    telegraf:
      enabled: true
    kafkaConnectManager:
      enabled: true
  registry:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hostname: tucson-teststand.lsst.codes
      path: /schema-registry(/|$)(.*)
  kraft:
    enabled: true
  kafkaController:
    enabled: true
    resources:
      requests:
        memory: 16Gi
        cpu: "2"
      limits:
        memory: 16Gi
        cpu: "2"

influxdb:
  persistence:
    storageClass: rook-ceph-block
  ingress:
    enabled: true
    hostname: tucson-teststand.lsst.codes

telegraf-kafka-consumer:
  enabled: false
  kafkaConsumers:
    auxtel:
      enabled: true
      topicRegexps: |
        [ ".*ATAOS", ".*ATDome", ".*ATDomeTrajectory", ".*ATHexapod", ".*ATPneumatics", ".*ATPtg", ".*ATMCS" ]
    maintel:
      enabled: true
      topicRegexps: |
        [ ".*MTAOS", ".*MTDome", ".*MTDomeTrajectory", ".*MTPtg" ]
    mtmount:
      enabled: true
      topicRegexps: |
        [ ".*MTMount" ]
    comcam:
      enabled: true
      topicRegexps: |
        [ ".*CCCamera", ".*CCHeaderService", ".*CCOODS" ]
    eas:
      enabled: true
      topicRegexps: |
        [ ".*DIMM", ".*DSM", ".*EPM", ".*ESS", ".*WeatherForecast" ]
    latiss:
      enabled: true
      topicRegexps: |
        [ ".*ATCamera", ".*ATHeaderService", ".*ATOODS", ".*ATSpectrograph" ]
    m1m3:
      enabled: true
      flush_interval: "1s"
      metric_batch_size: 5000
      interval: "0.1s"
      topicRegexps: |
        [ ".*MTM1M3" ]
    m2:
      enabled: true
      topicRegexps: |
        [ ".*MTHexapod", ".*MTM2", ".*MTRotator" ]
    obssys:
      enabled: true
      topicRegexps: |
        [ ".*Scheduler", ".*Script", ".*ScriptQueue", ".*Watcher" ]
    ocps:
      enabled: true
      topicRegexps: |
        [ ".*OCPS" ]
    calsys:
      enabled: true
      topicRegexps: |
        [ ".*ATMonochromator", ".*ATWhiteLight", ".*CBP", ".*Electrometer", ".*FiberSpectrograph", ".*LEDProjector", ".*LinearStage", ".*MTReflector", ".*TunableLaser" ]
    mtaircompressor:
      enabled: true
      topicRegexps: |
        [ ".*MTAirCompressor" ]
    lasertracker:
      enabled: true
      topicRegexps: |
        [ ".*LaserTracker" ]
    test:
      enabled: true
      topicRegexps: |
        [ "lsst.sal.Test" ]
    genericcamera:
      enabled: true
      topicRegexps: |
        [ ".*GCHeaderService", ".*GenericCamera" ]

kafka-connect-manager:
  influxdbSink:
    # Based on the kafka producers configuration for the TTS
    # https://github.com/lsst-ts/argocd-csc/blob/main/apps/kafka-producers/values-tucson-teststand.yaml
    connectors:
      auxtel:
        enabled: true
        topicsRegex: ".*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS"
      maintel:
        enabled: true
        topicsRegex: ".*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg"
      mtmount:
        enabled: true
        topicsRegex: ".*MTMount"
      comcam:
        enabled: true
        topicsRegex: ".*CCCamera|.*CCHeaderService|.*CCOODS"
      eas:
        enabled: true
        topicsRegex: ".*DIMM|.*DSM|.*EPM|.*ESS|.*WeatherForecast"
      latiss:
        enabled: true
        topicsRegex: ".*ATCamera|.*ATHeaderService|.*ATOODS|.*ATSpectrograph"
      m1m3:
        enabled: true
        topicsRegex: ".*MTM1M3"
      m2:
        enabled: true
        topicsRegex: ".*MTHexapod|.*MTM2|.*MTRotator"
      obssys:
        enabled: true
        topicsRegex: ".*Scheduler|.*Script|.*ScriptQueue|.*Watcher"
      ocps:
        enabled: true
        topicsRegex: ".*OCPS"
      test:
        enabled: true
        topicsRegex: "lsst.sal.Test"
      calsys:
        enabled: true
        topicsRegex: ".*ATMonochromator|.*ATWhiteLight|.*CBP|.*Electrometer|.*FiberSpectrograph|.*LEDProjector|.*LinearStage|.*MTReflector|.*TunableLaser"
      mtaircompressor:
        enabled: true
        topicsRegex: ".*MTAirCompressor"
      lasertracker:
        enabled: true
        topicsRegex: ".*LaserTracker"
      genericcamera:
        enabled: true
        topicsRegex: ".*GCHeaderService|.*GenericCamera"

kafdrop:
  cmdArgs: "--message.format=AVRO --message.keyFormat=DEFAULT --topic.deleteEnabled=false --topic.createEnabled=false"
  ingress:
    enabled: true
    hostname: tucson-teststand.lsst.codes

rest-proxy:
  enabled: true
  ingress:
    enabled: true
    hostname: tucson-teststand.lsst.codes
  configurationOverrides:
    "access.control.allow.origin": https://tucson-teststand.lsst.codes/love
  kafka:
    topics:
      - test.next-visit
    topicPrefixes:
      - test
      - lsst.dm

chronograf:
  persistence:
    storageClass: rook-ceph-block
  ingress:
    enabled: true
    hostname: tucson-teststand.lsst.codes
  env:
    GENERIC_NAME: "OIDC"
    GENERIC_AUTH_URL: https://tucson-teststand.lsst.codes/auth/openid/login
    GENERIC_TOKEN_URL: https://tucson-teststand.lsst.codes/auth/openid/token
    USE_ID_TOKEN: 1
    JWKS_URL: https://tucson-teststand.lsst.codes/.well-known/jwks.json
    GENERIC_API_URL: https://tucson-teststand.lsst.codes/auth/openid/userinfo
    GENERIC_SCOPES: openid
    GENERIC_API_KEY: sub
    PUBLIC_URL: https://tucson-teststand.lsst.codes
    STATUS_FEED_URL: https://raw.githubusercontent.com/lsst-sqre/rsp_broadcast/main/jsonfeeds/tucson-teststand.json

kapacitor:
  persistence:
    storageClass: rook-ceph-block

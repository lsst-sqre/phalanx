strimzi-kafka:
  kafka:
    version: "3.9.0"
    config:
      # -- Replica lag time can't be smaller than request.timeout.ms configuration in kafka connect.
      replica.lag.time.max.ms: 120000
      log.retention.minutes: 10080
      offsets.retention.minutes: 10080
    listeners:
      tls:
        enabled: true
      plain:
        enabled: true
      external:
        enabled: true
    externalListener:
      tls:
        enabled: true
      bootstrap:
        annotations:
          metallb.universe.tf/address-pool: sdf-rubin-ingest
      brokers:
        - broker: 0
          annotations:
            metallb.universe.tf/address-pool: sdf-rubin-ingest
        - broker: 1
          annotations:
            metallb.universe.tf/address-pool: sdf-rubin-ingest
        - broker: 2
          annotations:
            metallb.universe.tf/address-pool: sdf-rubin-ingest
  mirrormaker2:
    enabled: true
    source:
      bootstrapServer: sasquatch-summit-kafka-bootstrap.lsst.codes:9094
      topicsPattern: "registry-schemas, lsst.sal.*, lsst.dm.*, lsst.backpack.*, lsst.ATCamera.*, lsst.CCCamera.*, lsst.MTCamera.*, lsst.obsenv.*, lsst.cp.*"
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 4
        memory: 8Gi
  users:
    replicator:
      enabled: true
    telegraf:
      enabled: true
  controller:
    enabled: true
  broker:
    enabled: true
    name: kafka
    nodeIds: "[0,1,2]"
    storage:
      size: 5Ti
      storageClassName: zfs--rubin-efd
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - sdfk8so001
                    - sdfk8so005
                    - sdfk8so006
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: strimzi.io/cluster
                  operator: In
                  values:
                    - sasquatch
            topologyKey: kubernetes.io/hostname
    resources:
      requests:
        cpu: 8
        memory: 64Gi
      limits:
        cpu: 8
        memory: 64Gi
  cruiseControl:
    enabled: true

schema-registry:
  enabled: true

influxdb:
  enabled: false

influxdb-enterprise-standby:
  enabled: true
  image:
    tag: "1.12.2"
  license:
    secret:
      name: sasquatch
      key: influxdb-enterprise-standby-license
  meta:
    service:
      type: LoadBalancer
      annotations:
        metallb.universe.tf/address-pool: sdf-services
    ingress:
      enabled: true
      hostname: usdf-rsp.slac.stanford.edu
      path: "/influxdb-enterprise-meta(/|$)(.*)"
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 16Gi
    sharedSecret:
      secret:
        name: sasquatch
        key: influxdb-enterprise-standby-shared-secret
  data:
    replicas: 1
    startupProbe:
      enabled: true
      failureThreshold: 15
      initialDelaySeconds: 900
      periodSeconds: 60
    config:
      cluster:
        max-concurrent-queries: 150
        query-timeout: "90s"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: influxdb.influxdata.com/component
                    operator: In
                    values:
                      - data
              topologyKey: kubernetes.io/hostname
    ingress:
      enabled: true
      hostname: usdf-rsp.slac.stanford.edu
      path: "/influxdb-enterprise-data(/|$)(.*)"
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      storageClass: wekafs--sdf-k8s01
      size: 100Ti
    resources:
      requests:
        memory: 128Gi
        # The InfluxDB Enterprise license is limited to 16 cpu, the
        # standby instance uses a 1 node x 16 cpu setup
        cpu: 16
      limits:
        memory: 128Gi
        cpu: 16

influxdb-enterprise-active:
  enabled: true
  image:
    tag: "1.12.2"
  license:
    secret:
      name: sasquatch
      key: influxdb-enterprise-active-license
  meta:
    service:
      type: LoadBalancer
      annotations:
        metallb.universe.tf/address-pool: sdf-services
    ingress:
      enabled: true
      hostname: usdf-rsp.slac.stanford.edu
      path: "/influxdb-enterprise-active-meta(/|$)(.*)"
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 16Gi
    sharedSecret:
      secret:
        name: sasquatch
        key: influxdb-enterprise-active-shared-secret
    resources:
  data:
    replicas: 2
    startupProbe:
      enabled: true
      failureThreshold: 15
      initialDelaySeconds: 900
      periodSeconds: 60
    config:
      cluster:
        max-concurrent-queries: 300
        query-timeout: "180s"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - sdfk8so005
                    - sdfk8so006
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: influxdb.influxdata.com/component
                    operator: In
                    values:
                      - data
              topologyKey: kubernetes.io/hostname
    ingress:
      enabled: true
      hostname: usdf-rsp.slac.stanford.edu
      path: "/influxdb-enterprise-active-data(/|$)(.*)"
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      storageClass: zfs--rubin-efd
      size: 100Ti
    resources:
      requests:
        memory: 192Gi
        # The InfluxDB Enterprise license is limited to 16 cpu, the
        # active instance uses a 2 node x 8 cpu setup
        cpu: 8
      limits:
        memory: 192Gi
        cpu: 8

telegraf:
  enabled: false
  influxdb:
    urls:
      - "http://sasquatch-influxdb-enterprise-active-data.sasquatch:8086"
  registry:
    url: "https://usdf-rsp-int.slac.stanford.edu/schema-registry-remote"
  kafkaConsumers:
    # Sasquatch backpack connector
    backpack:
      enabled: true
      database: "lsst.backpack"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.backpack" ]
    # CSC connectors
    maintel:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTAOS", "lsst.sal.MTDome", "lsst.sal.MTDomeTrajectory", "lsst.sal.MTPtg" ]
    mtmount:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTMount" ]
    comcam:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.CCCamera", "lsst.sal.CCHeaderService", "lsst.sal.CCOODS" ]
    envsys:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.DIMM", "lsst.sal.DREAM", "lsst.sal.EAS", "lsst.sal.ESS", "lsst.sal.DSM", "lsst.sal.EPM", "lsst.sal.HVAC", "lsst.sal.WeatherForecast" ]
    m1m3:
      enabled: true
      metric_batch_size: 1500
      max_undelivered_messages: 4000
      database: "efd"
      topicRegexps: |
        [ "lsst.sal.MTM1M3([^T].*)" ]
    m1m3ts:
      enabled: true
      metric_batch_size: 1500
      max_undelivered_messages: 4000
      database: "efd"
      topicRegexps: |
        [ "lsst.sal.MTM1M3TS" ]
    m2:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTHexapod", "lsst.sal.MTM2", "lsst.sal.MTRotator" ]
    obssys:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Scheduler", "lsst.sal.Script", "lsst.sal.ScriptQueue", "lsst.sal.Watcher" ]
    ocps:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.OCPS" ]
    pmd:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.PMD" ]
    calsys:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATMonochromator", "lsst.sal.ATWhiteLight", "lsst.sal.CBP", "lsst.sal.Electrometer", "lsst.sal.FiberSpectrograph", "lsst.sal.LEDProjector", "lsst.sal.LinearStage", "lsst.sal.MTReflector", "lsst.sal.TunableLaser" ]
    mtaircompressor:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTAirCompressor" ]
    genericcamera:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.GCHeaderService", "lsst.sal.GenericCamera" ]
    gis:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.GIS" ]
    mtvms:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTVMS" ]
    lsstcam:
      enabled: true
      repair: false
      metric_batch_size: 250
      max_undelivered_messages: 5000
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTCamera", "lsst.sal.MTHeaderService", "lsst.sal.MTOODS" ]
    auxtel:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATAOS", "lsst.sal.ATBuilding", "lsst.sal.ATDome", "lsst.sal.ATDomeTrajectory", "lsst.sal.ATHexapod", "lsst.sal.ATPneumatics", "lsst.sal.ATPtg", "lsst.sal.ATMCS" ]
    latiss:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATCamera", "lsst.sal.ATHeaderService", "lsst.sal.ATOODS", "lsst.sal.ATSpectrograph" ]
    test:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Test" ]
    lasertracker:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.LaserTracker" ]
    # CCS connectors (experimental) data is being written on separate databases for now
    atcamera:
      enabled: true
      database: "lsst.ATCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Location", "Raft", "Reb", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.ATCamera" ]
    cccamera:
      enabled: true
      database: "lsst.CCCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Cold", "Cryo", "Hardware", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.CCCamera" ]
    mtcamera:
      enabled: true
      database: "lsst.MTCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Axis", "Canbus", "Cip", "Clamp", "Cold", "Controller", "Cryo", "Gateway", "Hardware", "Hip", "Hook", "Latch", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Socket", "Source", "Truck" ]
      topicRegexps: |
        [ "lsst.MTCamera" ]
    obsenv:
      enabled: true
      database: "lsst.obsenv"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.obsenv" ]
    cp:
      enabled: true
      database: "lsst.cp"
      timestamp_format: "unix"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.cp" ]
      tags: |
        [ "dataset_tag", "band", "instrument", "skymap", "detector", "physical_filter", "tract", "exposure", "patch", "visit", "run", "pipeline" ]

telegraf-standby:
  enabled: true
  influxdb:
    urls:
      - "http://sasquatch-influxdb-enterprise-standby-data.sasquatch:8086"
  registry:
    url: "https://usdf-rsp-int.slac.stanford.edu/schema-registry-remote"
  kafkaConsumers:
    # Sasquatch backpack connector
    standby-backpack:
      enabled: true
      database: "lsst.backpack"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.backpack" ]
    # CSC connectors
    standby-maintel:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTAOS", "lsst.sal.MTDome", "lsst.sal.MTDomeTrajectory", "lsst.sal.MTPtg" ]
    standby-mtmount:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTMount" ]
    standby-comcam:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.CCCamera", "lsst.sal.CCHeaderService", "lsst.sal.CCOODS" ]
    standby-envsys:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.DIMM", "lsst.sal.DREAM", "lsst.sal.EAS", "lsst.sal.ESS", "lsst.sal.DSM", "lsst.sal.EPM", "lsst.sal.HVAC", "lsst.sal.WeatherForecast" ]
    standby-m1m3:
      enabled: true
      metric_batch_size: 1500
      max_undelivered_messages: 4000
      database: "efd"
      topicRegexps: |
        [ "lsst.sal.MTM1M3([^T].*)" ]
    standby-m1m3ts:
      enabled: true
      metric_batch_size: 1500
      max_undelivered_messages: 4000
      database: "efd"
      topicRegexps: |
        [ "lsst.sal.MTM1M3TS" ]
    standby-m2:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTHexapod", "lsst.sal.MTM2", "lsst.sal.MTRotator" ]
    standby-obssys:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Scheduler", "lsst.sal.Script", "lsst.sal.ScriptQueue", "lsst.sal.Watcher" ]
    standby-ocps:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.OCPS" ]
    standby-pmd:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.PMD" ]
    standby-calsys:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATMonochromator", "lsst.sal.ATWhiteLight", "lsst.sal.CBP", "lsst.sal.Electrometer", "lsst.sal.FiberSpectrograph", "lsst.sal.LEDProjector", "lsst.sal.LinearStage", "lsst.sal.MTReflector", "lsst.sal.TunableLaser" ]
    standby-mtaircompressor:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTAirCompressor" ]
    standby-genericcamera:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.GCHeaderService", "lsst.sal.GenericCamera" ]
    standby-gis:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.GIS" ]
    standby-mtvms:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTVMS" ]
    standby-lsstcam:
      enabled: true
      repair: false
      metric_batch_size: 250
      max_undelivered_messages: 5000
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.MTCamera", "lsst.sal.MTHeaderService", "lsst.sal.MTOODS" ]
    standby-auxtel:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATAOS", "lsst.sal.ATBuilding", "lsst.sal.ATDome", "lsst.sal.ATDomeTrajectory", "lsst.sal.ATHexapod", "lsst.sal.ATPneumatics", "lsst.sal.ATPtg", "lsst.sal.ATMCS" ]
    standby-latiss:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATCamera", "lsst.sal.ATHeaderService", "lsst.sal.ATOODS", "lsst.sal.ATSpectrograph" ]
    standby-test:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Test" ]
    standby-lasertracker:
      enabled: true
      repair: false
      database: "efd"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.LaserTracker" ]
    # CCS connectors (experimental) data is being written on separate databases for now
    standby-atcamera:
      enabled: true
      database: "lsst.ATCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Location", "Raft", "Reb", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.ATCamera" ]
    standby-cccamera:
      enabled: true
      database: "lsst.CCCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Cold", "Cryo", "Hardware", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Source" ]
      topicRegexps: |
        [ "lsst.CCCamera" ]
    standby-mtcamera:
      enabled: true
      database: "lsst.MTCamera"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      tags: |
        [ "Agent", "Aspic", "Axis", "Canbus", "Cip", "Clamp", "Cold", "Controller", "Cryo", "Gateway", "Hardware", "Hip", "Hook", "Latch", "Location", "Ps", "RTD", "Raft", "Reb", "Segment", "Sensor", "Socket", "Source", "Truck" ]
      topicRegexps: |
        [ "lsst.MTCamera" ]
    standby-obsenv:
      enabled: true
      database: "lsst.obsenv"
      timestamp_format: "unix_ms"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.obsenv" ]
    standby-cp:
      enabled: true
      database: "lsst.cp"
      timestamp_format: "unix"
      timestamp_field: "timestamp"
      topicRegexps: |
        [ "lsst.cp" ]
      tags: |
        [ "dataset_tag", "band", "instrument", "skymap", "detector", "physical_filter", "tract", "exposure", "patch", "visit", "run", "pipeline" ]

kafdrop:
  ingress:
    enabled: true
    hostname: usdf-rsp.slac.stanford.edu

chronograf:
  ingress:
    enabled: true
    hostname: usdf-rsp.slac.stanford.edu
    annotations:
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
  env:
    GENERIC_NAME: "OIDC"
    GENERIC_AUTH_URL: https://usdf-rsp.slac.stanford.edu/auth/openid/login
    GENERIC_TOKEN_URL: https://usdf-rsp.slac.stanford.edu/auth/openid/token
    USE_ID_TOKEN: 1
    JWKS_URL: https://usdf-rsp.slac.stanford.edu/.well-known/jwks.json
    GENERIC_API_URL: https://usdf-rsp.slac.stanford.edu/auth/userinfo
    GENERIC_SCOPES: openid
    GENERIC_API_KEY: sub
    PUBLIC_URL: https://usdf-rsp.slac.stanford.edu/
    STATUS_FEED_URL: https://raw.githubusercontent.com/lsst-sqre/rsp_broadcast/main/jsonfeeds/usdfprod.json
  resources:
    requests:
      memory: 16Gi
      cpu: 1
    limits:
      memory: 64Gi
      cpu: 4

kapacitor:
  influxURL: http://sasquatch-influxdb-enterprise-standby-data.sasquatch:8086

app-metrics:
  enabled: true
  apps:
    - gafaelfawr
    - noteburst
  influxdb:
    url: http://sasquatch-influxdb-enterprise-active-data.sasquatch:8086

backup:
  enabled: true
  persistence:
    size: 100Ti
    storageClass: wekafs--sdf-k8s01
  backupItems:
    - name: chronograf
      enabled: true
      retentionDays: 7
    - name: kapacitor
      enabled: true
      retentionDays: 7
    - name: influxdb-enterprise-incremental
      enabled: true

prompt-processing:
  enabled: true

consdb:
  enabled: true

data-transfer-monitoring:
  enabled: true

obsloctap:
  enabled: true

strimzi-kafka:
  kafka:
    disruptionTolerance: 2
    listeners:
      tls:
        enabled: true
      plain:
        enabled: true
      external:
        enabled: true
    config:
      # -- Replica lag time can't be smaller than request.timeout.ms configuration in kafka connect.
      replica.lag.time.max.ms: 120000

  connect:
    enabled: true
    config:
      # -- Increase the request timeout for Kafka Connect to 120 seconds
      request.timeout.ms: 120000

  mirrormaker2:
    enabled: true
    source:
      bootstrapServer: sasquatch-summit-kafka-bootstrap.lsst.codes:9094
      topicsPattern: "registry-schemas, lsst.sal.*, lsst.dm.*"
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 4
        memory: 8Gi
  users:
    replicator:
      enabled: true
    kafdrop:
      enabled: true
    telegraf:
      enabled: true
    kafkaConnectManager:
      enabled: true
    promptProcessing:
      enabled: true
    consdb:
      enabled: true
  kraft:
    enabled: true
  kafkaController:
    enabled: true
  cruiseControl:
    enabled: true
  localStorage:
    enabled: true
    migration:
      enabled: false
      rebalance: false
      brokers:
        - 3
        - 4
        - 5
    size: 1.5Ti
    storageClassName: zfs--rubin-efd
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - sdfk8sn004
                    - sdfk8sn005
                    - sdfk8sn007
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: strimzi.io/cluster
                  operator: In
                  values:
                    - sasquatch
            topologyKey: kubernetes.io/hostname

influxdb:
  enabled: false

influxdb-enterprise:
  enabled: true
  meta:
    service:
      type: LoadBalancer
      annotations:
        metallb.universe.tf/address-pool: sdf-services
    ingress:
      enabled: true
      hostname: usdf-rsp.slac.stanford.edu
    persistence:
      # -- Enable InfluxDB Enterprise meta pod persistence
      enabled: true
      accessMode: ReadWriteOnce
      size: 16Gi
    # -- InfluxDB Enterprise meta pod resources
    resources:
      requests:
        memory: 2Gi
        cpu: 2
      limits:
        memory: 4Gi
        cpu: 4
  data:
    replicas: 2
    ingress:
      enabled: true
      hostname: usdf-rsp.slac.stanford.edu
    # -- Enable InfluxDB Enterprise data pod persistence
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      storageClass: zfs--rubin-efd
      size: 30Ti
    # -- InfluxDB Enterprise data pod resources
    resources:
      requests:
        memory: 192Gi
        cpu: 8
      limits:
        memory: 192Gi
        cpu: 8

kafka-connect-manager-enterprise:
  enabled: true
  influxdbSink:
    connectInfluxUrl: "http://sasquatch-influxdb-enterprise-data.sasquatch:8086"
    connectInfluxDb: "efd"
    # Enable here the same connectors that are enabled at the summit to
    # persist the same data at InfluxDB Enterprise at USDF
    connectors:
      enterprise-maintel:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg"
      enterprise-mtmount:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTMount"
        tasksMax: "8"
      enterprise-comcam:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*CCCamera|.*CCHeaderService|.*CCOODS"
      enterprise-eas:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*DIMM|.*DSM|.*EPM|.*ESS|.*HVAC|.*WeatherForecast"
      enterprise-m1m3:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTM1M3"
        tasksMax: "8"
      enterprise-m2:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTHexapod|.*MTM2|.*MTRotator"
      enterprise-obssys:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*Scheduler|.*Script|.*ScriptQueue|.*Watcher"
      enterprise-ocps:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*OCPS"
      enterprise-pmd:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*PMD"
      enterprise-calsys:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*ATMonochromator|.*ATWhiteLight|.*CBP|.*Electrometer|.*FiberSpectrograph|.*LinearStage|.*TunableLaser"
      enterprise-mtaircompressor:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTAirCompressor"
      enterprise-genericcamera:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*GCHeaderService|.*GenericCamera"
      enterprise-gis:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*GIS"
      enterprise-mtvms:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTVMS"
      enterprise-lsstcam:
        enabled: true
        repairerConnector: false
        topicsRegex: ".*MTCamera|.*MTHeaderService|.*MTOODS"

telegraf-kafka-consumer:
  enabled: true
  influxdb:
    url: "http://sasquatch-influxdb-enterprise-data.sasquatch:8086"
  kafkaConsumers:
    auxtel:
      enabled: true
      database: "efd"
      replicaCount: 1
      interval: "1s"
      flush_interval: "1s"
      union_mode: "nullable"
      timestamp_format: "unix"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATAOS", "lsst.sal.ATDome", "lsst.sal.ATDomeTrajectory", "lsst.sal.ATHexapod", "lsst.sal.ATPneumatics", "lsst.sal.ATPtg", "lsst.sal.ATMCS" ]
    latiss:
      enabled: true
      database: "efd"
      replicaCount: 1
      interval: "1s"
      flush_interval: "1s"
      union_mode: "nullable"
      timestamp_format: "unix"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.ATCamera", "lsst.sal.ATHeaderService", "lsst.sal.ATOODS", "lsst.sal.ATSpectrograph" ]
    test:
      enabled: true
      database: "efd"
      replicaCount: 1
      interval: "1s"
      flush_interval: "1s"
      union_mode: "nullable"
      timestamp_format: "unix"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.Test" ]
    lasertracker:
      enabled: true
      database: "efd"
      replicaCount: 1
      interval: "1s"
      flush_interval: "1s"
      union_mode: "nullable"
      timestamp_format: "unix"
      timestamp_field: "private_efdStamp"
      topicRegexps: |
        [ "lsst.sal.LaserTracker" ]

kafdrop:
  ingress:
    enabled: true
    hostname: usdf-rsp.slac.stanford.edu

chronograf:
  ingress:
    enabled: true
    hostname: usdf-rsp.slac.stanford.edu
  env:
    GENERIC_NAME: "OIDC"
    GENERIC_AUTH_URL: https://usdf-rsp.slac.stanford.edu/auth/openid/login
    GENERIC_TOKEN_URL: https://usdf-rsp.slac.stanford.edu/auth/openid/token
    USE_ID_TOKEN: 1
    JWKS_URL: https://usdf-rsp.slac.stanford.edu/.well-known/jwks.json
    GENERIC_API_URL: https://usdf-rsp.slac.stanford.edu/auth/userinfo
    GENERIC_SCOPES: openid
    GENERIC_API_KEY: sub
    PUBLIC_URL: https://usdf-rsp.slac.stanford.edu/
    STATUS_FEED_URL: https://raw.githubusercontent.com/lsst-sqre/rsp_broadcast/main/jsonfeeds/usdfprod.json

kapacitor:
  influxURL: http://sasquatch-influxdb-enterprise-data.sasquatch:8086

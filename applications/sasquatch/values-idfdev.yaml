strimzi-kafka:
  kafka:
    externalListener:
      tls:
        enabled: true
      bootstrap:
        loadBalancerIP: ""
        host: sasquatch-dev-kafka-bootstrap.lsst.cloud
      brokers:
        - broker: 0
          loadBalancerIP: ""
          host: sasquatch-dev-kafka-0.lsst.cloud
        - broker: 1
          loadBalancerIP: ""
          host: sasquatch-dev-kafka-1.lsst.cloud
        - broker: 2
          loadBalancerIP: ""
          host: sasquatch-dev-kafka-2.lsst.cloud
    resources:
      requests:
        memory: 16Gi
        cpu: 2
      limits:
        memory: 16Gi
        cpu: 2
  users:
    replicator:
      enabled: true
    kafdrop:
      enabled: true
    telegraf:
      enabled: true
    kafkaConnectManager:
      enabled: true
  kraft:
    enabled: true
  kafkaController:
    enabled: true
    resources:
      requests:
        memory: 16Gi
        cpu: "2"
      limits:
        memory: 16Gi
        cpu: "2"

  registry:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hostname: data-dev.lsst.cloud
      path: /schema-registry(/|$)(.*)

influxdb:
  ingress:
    enabled: true
    hostname: data-dev.lsst.cloud
  resources:
    requests:
      memory: 16Gi
      cpu: 2
    limits:
      memory: 16Gi
      cpu: 2

influxdb-enterprise:
  enabled: true
  license:
    secret:
      name: sasquatch
      key: influxdb-enterprise-license
  meta:
    ingress:
      enabled: true
      hostname: data-dev.lsst.cloud
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 16Gi
    sharedSecret:
      secret:
        name: sasquatch
        key: influxdb-enterprise-shared-secret
    resources:
      requests:
        memory: 2Gi
        cpu: 1
      limits:
        memory: 4Gi
        cpu: 2
  data:
    replicas: 2
    config:
      antiEntropy:
        enabled: true
    ingress:
      enabled: true
      hostname: data-dev.lsst.cloud
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Ti
    resources:
      requests:
        memory: 8Gi
        cpu: 2
      limits:
        memory: 16Gi
        cpu: 4

telegraf-kafka-consumer:
  enabled: true
  kafkaConsumers:
    test:
      enabled: true
      database: "telegraf-kafka-consumer-v1"
      replicaCount: 1
      topicRegexps: |
        [ "lsst.Test.*" ]

kafdrop:
  cmdArgs: "--message.format=AVRO --topic.deleteEnabled=true --topic.createEnabled=true"
  ingress:
    enabled: true
    hostname: data-dev.lsst.cloud

rest-proxy:
  enabled: true
  ingress:
    enabled: true
    hostname: data-dev.lsst.cloud
  kafka:
    topics:
      - test.next-visit
    topicPrefixes:
      - test
      - lsst.dm
      - lsst.Test

chronograf:
  ingress:
    enabled: true
    hostname: data-dev.lsst.cloud
  env:
    GENERIC_NAME: "OIDC"
    GENERIC_AUTH_URL: https://data-dev.lsst.cloud/auth/openid/login
    GENERIC_TOKEN_URL: https://data-dev.lsst.cloud/auth/openid/token
    USE_ID_TOKEN: 1
    JWKS_URL: https://data-dev.lsst.cloud/.well-known/jwks.json
    GENERIC_API_URL: https://data-dev.lsst.cloud/auth/openid/userinfo
    GENERIC_SCOPES: openid
    GENERIC_API_KEY: sub
    PUBLIC_URL: https://data-dev.lsst.cloud/
    STATUS_FEED_URL: https://raw.githubusercontent.com/lsst-sqre/rsp_broadcast/main/jsonfeeds/idfdev.json

app-metrics:
  enabled: true
  apps:
    - gafaelfawr
    - mobu

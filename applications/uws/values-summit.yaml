uws-api-server:
  targetCluster: "summit"
  hostname: summit-lsp.lsst.codes
  ttlSecondsAfterFinished: 7200
  image:
    tag: latest
  logLevel: INFO
  butlerPg:
    secretName: uws
    containerPath: &cp /home/lsst/.lsst
    dbUser: oods
  s3ButlerStorage:
    endpointURL: https://s3-butler.cp.lsst.org
    containerPath: *cp
  workingVolume:
    name: job-files
    server: nfs-scratch.cp.lsst.org
    exportPath: "/scratch"
    claimName: uws-server-pvc
    mountPath: "/uws"
    subPath: "uws"
  volumes:
  - name: project
    server: nfs-project.cp.lsst.org
    claimName: project-pvc
    mountPath: "/project"
    exportPath: "/project"
    subPath: ""
    readOnly: false
  - name: repo-latiss
    server: nfs-auxtel.cp.lsst.org
    claimName: repo-latiss-pvc
    mountPath: "/repo/LATISS"
    exportPath: "/auxtel/repo/LATISS"
    subPath: ""
    readOnly: false
  - name: data-auxtel
    server: nfs-auxtel.cp.lsst.org
    claimName: data-auxtel-pvc
    mountPath: "/data/lsstdata/base/auxtel"
    exportPath: "/auxtel/lsstdata/base/auxtel"
    subPath: ""
    readOnly: true

atocps:
  enabled: true
  classifier: ocps1
  image:
    repository: ts-dockerhub.lsst.org/dmocps
    pullPolicy: Always
  env:
    RUN_ARG: 1
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 10m
      memory: 100Mi

ccocps:
  enabled: true
  classifier: ocps2
  image:
    repository: ts-dockerhub.lsst.org/dmocps
    pullPolicy: Always
  env:
    RUN_ARG: 2
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 1m
      memory: 100Mi

mtocps:
  enabled: true
  classifier: ocps3
  image:
    repository: ts-dockerhub.lsst.org/dmocps
    pullPolicy: Always
  env:
    RUN_ARG: 3
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 10m
      memory: 100Mi

raocps:
  enabled: true
  classifier: ocps101
  image:
    repository: ts-dockerhub.lsst.org/dmocps
    pullPolicy: Always
  env:
    RUN_ARG: 101
    REDIS_HOST: redis-service.rapid-analysis.svc.cluster.local
    REDIS_PORT: 6379
  envSecrets:
  - name: REDIS_PASSWORD
    key: redis-password
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 1m
      memory: 100Mi

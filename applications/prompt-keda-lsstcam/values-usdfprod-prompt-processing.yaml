prompt-keda:
  image:
    pullPolicy: IfNotPresent
    tag: 6.16.0

  alerts:
    username: kafka-admin
    server: usdf-alert-stream-dev.lsst.cloud:9094
    topic: lsst-alerts-v7.4

  worker:
    # TODO: need to adjust this once we know how leaky the LSSTCam pipeline is
    restart: 7

  instrument:
    pipelines:
      # IMPORTANT: don't use flow-style mappings (i.e., {}) in pipelines specs
      # if the result (including any comments) is longer than 72 characters.
      # The config will get corrupted after template substitution.
      # Block-style mappings can have lines of any length.
      main: |-
        - survey: BLOCK-365  # FBS SV Field Survey
          pipelines:
          - ${PROMPT_PROCESSING_DIR}/pipelines/LSSTCam/ApPipe-noForced.yaml
          - ${PROMPT_PROCESSING_DIR}/pipelines/LSSTCam/SingleFrame.yaml
          - ${PROMPT_PROCESSING_DIR}/pipelines/LSSTCam/Isr.yaml
        - survey: BLOCK-T427  # Daytime checkout
          pipelines: ['${PROMPT_PROCESSING_DIR}/pipelines/LSSTCam/Isr-cal.yaml']
        # Produces nextVisits but not images
        - {survey: "BLOCK-T454", pipelines: []}
        # Miscellaneous scripts, not always images
        - {survey: "", pipelines: []}
        # Ignore unknown events during Commissioning
        - {pipelines: []}
      preprocessing: |-
        # Run to enable solar system processing in SingleFrame
        - survey: BLOCK-365
          pipelines: ['${PROMPT_PROCESSING_DIR}/pipelines/LSSTCam/Preprocessing-noForced.yaml']
        - {survey: "", pipelines: []}
        # Don't preprocess anything unknown
        - {pipelines: []}
    preloadPadding: 50.1
    centralRepo: s3://rubin-summit-users
    readRepo: s3://rubin-summit-users/butler-nochain-readonly.yaml
    exportTypes: |-
      - ".*_(config|metadata|log)"
      - "packages"
      - "regionTimeInfo"
      - "template_detector"
      - "preliminary_visit_image"
      - "preliminary_visit_image_background"
      - "difference_image"
      - "single_visit_star_footprints"
      - "dia_source_unfiltered"
      - "dia_source_detector"
      - "difference_kernel"
      - "dia_source_apdb"
      - "dia_forced_source_apdb"
      - "dia_object_apdb"
      - "ss_source_direct_detector"
      - "ss_object_direct_unassociated"
      - "ss_object_unassociated_detector"
      - "ss_source_detector"
      - "marginal_new_dia_source"
      - "new_dia_source"
      - "preloaded_dia_forced_source"
      - "preloaded_dia_object"
      - "preloaded_dia_source"
      - "preloaded_ss_object"
      - "difference_image_metrics"
      - "diffimPlots_.*"

  s3:
    imageBucket: rubin-summit
    endpointUrl: https://sdfembs3.sdf.slac.stanford.edu
    aws_profile: embargo

  raw_microservice: http://172.24.5.158:8080/presence

  # TODO: replace with permanent service once it's up
  mpSky_service: http://sdfiana014.sdf.slac.stanford.edu:3666/ephemerides/

  iers_cache: s3://rubin-summit-users/iers-cache.zip

  imageNotifications:
    kafkaClusterAddress: prompt-processing-2-kafka-bootstrap.kafka:9092
    topic: rubin-summit-notification
    # TODO: need to adjust this based on observed nextVisit lead time (depends on scheduler) and PP prep time
    # The shorter this is, the less capacity is wasted on canceled visits
    imageTimeout: 120

  apdb:
    config: s3://rubin-summit-users/apdb_config/cassandra/pp_apdb_lsstcam.yaml

  logLevel: >-
    timer.lsst.activator=DEBUG timer.lsst.daf.butler=VERBOSE
    lsst.associateApdb=VERBOSE lsst.loadDiaCatalogs=VERBOSE lsst.computeReliability=VERBOSE
    lsst.daf.butler=VERBOSE

  sasquatch:
    # TODO: production Sasquatch not yet ready
    endpointUrl: https://usdf-rsp-dev.slac.stanford.edu/sasquatch-rest-proxy
    namespace: lsst.prompt.prod
    auth_env: false

  debug:
    monitorDaxApdb: true

  keda:
    minReplicaCount: 3
    maxReplicaCount: 1700

    # TODO: may need to reduce if we don't have enough capacity
    # redisStreams:
    #   expiration: 600

  initializer:
    podAnnotations: {
      edu.stanford.slac.sdf.project/usdf-embargo: "true"
    }

  butler_writer:
    kafka_cluster: prompt-kafka-kafka-bootstrap.prompt-kafka:9092
    kafka_username: butler-writer
    kafka_topic: butler-writer
    output_file_path: "s3://embargo@rubin-summit-users/pp-transfer/"

  podAnnotations: {
    edu.stanford.slac.sdf.project/usdf-embargo: "true"
  }

  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 10
        preference:
          matchExpressions:
          - key: node-role.kubernetes.io/prompt-processing
            operator: Exists

apiVersion: v1
kind: ConfigMap
metadata:
  name: "hub-config"
  labels:
    {{- include "nublado.labels" . | nindent 4 }}
data:
  00_nublado.py: |
    import rsp_restspawner

    # Use our authenticator and spawner.
    c.JupyterHub.authenticator_class = "rsp_restspawner.GafaelfawrAuthenticator"
    c.JupyterHub.spawner_class = "rsp_restspawner.RSPRestSpawner"

    # Set internal Hub API URL.
    c.JupyterHub.hub_connect_url = (
        "http://hub.{{ .Release.Namespace }}:"
        + str(os.environ["HUB_SERVICE_PORT"])
    )

    # Turn off concurrent spawn limit.
    c.JupyterHub.concurrent_spawn_limit = 0

    # Enable stored auth state.
    c.Authenticator.enable_auth_state = True

    # Turn off restart after n consecutive failures.
    c.Spawner.consecutive_failure_limit = 0

    # Use JupyterLab by default.
    c.Spawner.default_url = "/lab"

    # Allow ten minutes for the lab to spawn in case it needs to be pulled.
    c.Spawner.start_timeout = {{ .Values.hub.timeout.spawn }}

    # Allow 90 seconds for JupyterLab to start. For reasons we do not yet
    # understand, it is often glacially slow and sometimes takes over 60
    # seconds.
    c.Spawner.http_timeout = {{ .Values.hub.timeout.startup }}

    # Configure the URL to the lab controller.
    c.RSPRestSpawner.controller_url = "{{ .Values.global.baseUrl }}{{ .Values.controller.config.safir.pathPrefix }}"

apiVersion: v1
kind: ConfigMap
metadata:
  name: "hub-config"
  labels:
    {{- include "nublado.labels" . | nindent 4 }}
data:
  00_nublado.py: |
    # Use our authenticator and spawner. Both register custom entry points,
    # so the full module and class name is not required.
    c.JupyterHub.authenticator_class = "gafaelfawr"
    c.JupyterHub.spawner_class = "nublado"

    # Set internal Hub API URL.
    c.JupyterHub.hub_connect_url = (
        "http://hub.{{ .Release.Namespace }}:"
        + str(os.environ["HUB_SERVICE_PORT"])
    )

    # JupyterHub uses a single database connection for all database activity
    # and JupyterLab by default sends activity updates every 30 seconds. By
    # the time we reach 1,000 active users, this is completely saturating
    # JupyterHub and it stops being able to do work. This interval controls
    # how frequently JupyterHub is willing to update activity information in
    # the database. Increase it to 10 minutes, which is still a very long time
    # compared to our idle thresholds.
    c.JupyterHub.activity_resolution = 600
    c.JupyterHub.last_activity_interval = 600

    # Turn off concurrent spawn limit.
    c.JupyterHub.concurrent_spawn_limit = 0
    {{- if .Values.hub.useSubdomains }}

    # Use separate hostnames for each user lab.
    c.JupyterHub.subdomain_host = "https://nb.{{ .Values.global.host }}"
    {{- end }}

    # Add custom templates.
    c.JupyterHub.template_paths = [ "/usr/local/etc/jupyterhub/templates" ]

    # Enable stored auth state.
    c.Authenticator.enable_auth_state = True

    # Turn off restart after n consecutive failures.
    c.Spawner.consecutive_failure_limit = 0

    # Use JupyterLab by default.
    c.Spawner.default_url = "/lab"

    # How long to wait for Kubernetes to start the lab. This must match the
    # corresponding setting in the Nublado controller.
    c.Spawner.start_timeout = {{ .Values.controller.config.lab.spawnTimeout }}

    # How long to wait for the JupyterLab process to respond to network
    # connections after the pod has started running.
    c.Spawner.http_timeout = {{ .Values.hub.timeout.startup }}

    # Configure the URL to the lab controller.
    c.NubladoSpawner.controller_url = "{{ .Values.global.baseUrl }}{{ .Values.controller.config.pathPrefix }}"

controller:
  config:
    logLevel: "DEBUG"
    images:
      source:
        type: "docker"
        registry: "docker-registry.slac.stanford.edu"
        repository: "lsstsqre/sciplat-lab"
      pin:
        - "w_2025_09"
    lab:
      env:
        AWS_SHARED_CREDENTIALS_FILE: "/opt/lsst/software/jupyterlab/secrets/aws-credentials.ini"
        AWS_REQUEST_CHECKSUM_CALCULATION: "WHEN_REQUIRED"
        DAF_BUTLER_REPOSITORY_INDEX: "/project/data-repos.yaml"
        DAX_APDB_INDEX_URI: "/sdf/group/rubin/shared/apdb_config/apdb-index.yaml"
        HUB_ROUTE: "/nb/hub"
        PGPASSFILE: "/opt/lsst/software/jupyterlab/secrets/postgres-credentials.txt"
        PGUSER: "rubin"
        RSP_SITE_TYPE: "staff"
        S3_ENDPOINT_URL: "https://s3dfrgw.slac.stanford.edu"
        http_proxy: "http://sdfproxy.sdf.slac.stanford.edu:3128"
        https_proxy: "http://sdfproxy.sdf.slac.stanford.edu:3128"
        no_proxy: "hub.nublado,.sdf.slac.stanford.edu,.slac.stanford.edu,localhost,127.0.0.1"
        LSST_DISABLE_BUCKET_VALIDATION: "1"
        LSST_RESOURCES_S3_PROFILE_embargo: "https://sdfembs3.sdf.slac.stanford.edu"
      extraAnnotations:
        "edu.stanford.slac.sdf.project/usdf-embargo": "true"
      homedirSchema: "initialThenUsername"
      nodeSelector:
        node-role.kubernetes.io/rsp-notebook: "true"
      nss:
        # Add rubin_users group (there is not yet a simpler way to do this).
        baseGroup: |
          root:x:0:0:root:/root:/bin/bash
          daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
          bin:x:2:2:bin:/bin:/usr/sbin/nologin
          sys:x:3:3:sys:/dev:/usr/sbin/nologin
          sync:x:4:65534:sync:/bin:/bin/sync
          games:x:5:60:games:/usr/games:/usr/sbin/nologin
          man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
          lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
          mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
          news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
          uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
          proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
          www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
          backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
          list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
          irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
          _apt:x:42:65534::/nonexistent:/usr/sbin/nologin
          rubin_users:x:4085:
          nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin

      pullSecret: "pull-secret"
      secrets:
        - secretName: "nublado-lab-secret"
          secretKey: "aws-credentials.ini"
        - secretName: "nublado-lab-secret"
          secretKey: "postgres-credentials.txt"
      volumes:
        - name: "sdf-home"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-home"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
        - name: "sdf-group-rubin"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-group-rubin"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
        - name: "sdf-data-rubin"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-data-rubin"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
        - name: "sdf-scratch"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-scratch"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
      volumeMounts:
        - containerPath: "/home"
          volumeName: "sdf-home"
        - containerPath: "/project"
          subPath: "g"
          volumeName: "sdf-group-rubin"
        - containerPath: "/sdf/group/rubin"
          volumeName: "sdf-group-rubin"
        - containerPath: "/sdf/data/rubin"
          volumeName: "sdf-data-rubin"
        - containerPath: "/scratch"
          volumeName: "sdf-scratch"

proxy:
  ingress:
    annotations:
      # proxy-body-size is temporary until USDF uses our normal ingress-nginx,
      # which already configures a larger value.
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"

jupyterhub:
  hub:
    db:
      url: "postgresql://nublado3@postgres.postgres/nublado3"
      upgrade: true
  cull:
    timeout: 432000  # 5 days
    maxAge: 691200  # 8 days

hub:
  internalDatabase: true

secrets:
  templateSecrets: false

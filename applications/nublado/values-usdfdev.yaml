controller:
  config:
    logLevel: "DEBUG"
    images:
      source:
        type: "docker"
        registry: "docker-registry.slac.stanford.edu"
        repository: "lsstsqre/sciplat-lab"
      pin:
        - "w_2024_42"
    lab:
      env:
        AWS_SHARED_CREDENTIALS_FILE: "/opt/lsst/software/jupyterlab/secrets/aws-credentials.ini"
        AUTO_REPO_SPECS: "https://github.com/lsst-sqre/system-test@prod,https://github.com/rubin-dp0/tutorial-notebooks@prod"
        DAF_BUTLER_REPOSITORY_INDEX: "/project/data-repos.yaml"
        DAX_APDB_INDEX_URI: "/sdf/group/rubin/shared/apdb_config/apdb-index.yaml"
        HUB_ROUTE: "/nb/hub"
        PGPASSFILE: "/opt/lsst/software/jupyterlab/secrets/postgres-credentials.txt"
        PGUSER: "rubin"
        RSP_SITE_TYPE: "staff"
        S3_ENDPOINT_URL: "https://s3dfrgw.slac.stanford.edu"
        http_proxy: "http://sdfproxy.sdf.slac.stanford.edu:3128"
        https_proxy: "http://sdfproxy.sdf.slac.stanford.edu:3128"
        no_proxy: "hub.nublado,.sdf.slac.stanford.edu,.slac.stanford.edu,localhost,127.0.0.1"
        LSST_DISABLE_BUCKET_VALIDATION: "1"
        LSST_RESOURCES_S3_PROFILE_embargo: "https://sdfembs3.sdf.slac.stanford.edu"
      homedirSchema: "initialThenUsername"
      nodeSelector:
        "edu.stanford.slac.sdf.project/rubin": "true"
      nss:
        # Add rubin_users group (there is not yet a simpler way to do this).
        baseGroup: |
          root:x:0:
          bin:x:1:
          daemon:x:2:
          sys:x:3:
          adm:x:4:
          tty:x:5:
          disk:x:6:
          lp:x:7:
          mem:x:8:
          kmem:x:9:
          wheel:x:10:
          cdrom:x:11:
          mail:x:12:
          man:x:15:
          dialout:x:18:
          floppy:x:19:
          games:x:20:
          utmp:x:22:
          tape:x:33:
          utempter:x:35:
          video:x:39:
          ftp:x:50:
          lock:x:54:
          tss:x:59:
          audio:x:63:
          dbus:x:81:
          screen:x:84:
          nobody:x:99:
          users:x:100:
          systemd-journal:x:190:
          systemd-network:x:192:
          cgred:x:997:
          ssh_keys:x:998:
          input:x:999:
          rubin_users:x:4085:
      pullSecret: "pull-secret"
      secrets:
        - secretName: "nublado-lab-secret"
          secretKey: "aws-credentials.ini"
        - secretName: "nublado-lab-secret"
          secretKey: "postgres-credentials.txt"
      volumes:
        - name: "sdf-home"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-home"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
        - name: "sdf-group-rubin"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-group-rubin"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
        - name: "sdf-data-rubin"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-data-rubin"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
        - name: "sdf-scratch"
          source:
            type: "persistentVolumeClaim"
            storageClassName: "sdf-scratch"
            accessModes:
              - "ReadWriteMany"
            resources:
              requests:
                storage: "1Gi"
      volumeMounts:
        - containerPath: "/home"
          volumeName: "sdf-home"
        - containerPath: "/project"
          subPath: "g"
          volumeName: "sdf-group-rubin"
        - containerPath: "/sdf/group/rubin"
          volumeName: "sdf-group-rubin"
        - containerPath: "/sdf/data/rubin"
          volumeName: "sdf-data-rubin"
        - containerPath: "/scratch"
          volumeName: "sdf-scratch"

proxy:
  ingress:
    annotations:
      # proxy-body-size is temporary until USDF uses our normal ingress-nginx,
      # which already configures a larger value.
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"

jupyterhub:
  hub:
    baseUrl: "/nb"
    db:
      url: "postgresql://nublado3@postgres.postgres/nublado3"
      upgrade: true
  cull:
    timeout: 432000  # 5 days
    maxAge: 691200  # 8 days

hub:
  internalDatabase: true

secrets:
  templateSecrets: true

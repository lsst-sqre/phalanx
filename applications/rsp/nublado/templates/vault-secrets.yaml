{{- if .Values.controller.config.lab.secrets }}
apiVersion: ricoberger.de/v1alpha1
kind: VaultSecret
metadata:
  name: "nublado-lab-secret"
  labels:
    {{- include "nublado.labels" . | nindent 4 }}
spec:
  {{- if .Values.secrets.templateSecrets }}
  path: "{{- .Values.global.vaultSecretsPath }}/nublado"
  templates:
    {{- range .Values.controller.config.lab.secrets }}
    {{- if eq .secretName "nublado-lab-secret" }}
    {{ .secretKey | quote }}: >-
      {% index .Secrets "{{ .secretKey }}" %}
    {{- end }}
    {{- end }}
  {{- else }}
  path: "{{- .Values.global.vaultSecretsPath }}/nublado-lab-secret"
  {{- end }}
  type: Opaque
---
{{- end }}
apiVersion: ricoberger.de/v1alpha1
kind: VaultSecret
metadata:
  name: "nublado-secret"
spec:
  path: "{{- .Values.global.vaultSecretsPath }}/nublado"
  type: Opaque

  templates:
    {{- /* dump in values.yaml for jupyterhub, without changing it */}}
    {{- /* this is copied from the zero-to-jupyterhub chart where it does this */}}
    {{- $values := merge dict .Values.jupyterhub }}
    {{- /* passthrough subset of Chart / Release */}}
    {{- $_ := set $values "Chart" (dict "Name" .Chart.Name "Version" .Chart.Version) }}
    {{- $_ := set $values "Release" (pick .Release "Name" "Namespace" "Service") }}
    values.yaml: {{ $values | toYaml | quote }}

    {{- /* dump in the rest of the keys in this path and their values */}}
    {{- /* this uses the templating provided by vault-secrets-operator */}}
    hub.db.password: "{% .Secrets.hub_db_password %}"
    hub.config.JupyterHub.cookie_secret: "{% .Secrets.crypto_key %}"
    hub.config.CryptKeeper.keys: "{% .Secrets.cryptkeeper_key %}"
    hub.config.ConfigurableHTTPProxy.auth_token: "{% .Secrets.proxy_token %}"
    {{- if .Values.controller.slackAlerts }}
    slack-webhook: "{% .Secrets.slack_webhook %}"
    {{- end }}
{{- if eq "docker" .Values.controller.config.images.source.type }}
---
apiVersion: ricoberger.de/v1alpha1
kind: VaultSecret
metadata:
  name: pull-secret
  labels:
    {{- include "nublado.labels" . | nindent 4 }}
spec:
  path: "{{- .Values.global.vaultSecretsPath }}/pull-secret"
  type: kubernetes.io/dockerconfigjson
{{- end }}
{{- if .Values.secrets.installTsSalKafkaSecret }}
---
apiVersion: ricoberger.de/v1alpha1
kind: VaultSecret
metadata:
  name: kafka-secret
  labels:
    {{- include "nublado.labels" . | nindent 4 }}
spec:
  path: "{{- .Values.global.vaultSecretsPath }}/ts/software/ts-salkafka"
  type: Opaque
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "nublado-controller"
  labels:
    {{- include "nublado.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "nublado.selectorLabels" . | nindent 6 }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/controller-configmap.yaml") . | sha256sum }}
        {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "nublado.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: "controller"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "all"
            readOnlyRootFilesystem: true
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy | quote }}
          env:
            - name: EXTERNAL_INSTANCE_URL
              value: {{ .Values.global.baseUrl | quote }}
            {{- if .Values.controller.slackAlerts }}
            - name: "NUBLADO_SLACK_WEBHOOK"
              valueFrom:
                secretKeyRef:
                  name: "nublado-secret"
                  key: "slack-webhook"
            {{- end }}
          ports:
            - name: "http"
              containerPort: 8080
              protocol: "TCP"
          readinessProbe:
            httpGet:
              path: "/"
              port: "http"
          {{- with .Values.controller.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "config"
              mountPath: "/etc/nublado"
              readOnly: true
            {{- if eq "docker" .Values.controller.config.images.source.type }}
            - name: "docker-creds"
              mountPath: "/etc/secrets"
              readOnly: true
            {{- end }}
            - name: "podinfo"
              mountPath: "/etc/podinfo"
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: "nublado-controller"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if eq "docker" .Values.controller.config.images.source.type }}
        - name: "docker-creds"
          secret:
            secretName: "pull-secret"
        {{- end }}
        - name: "config"
          configMap:
            name: "nublado-controller-config"
        - name: "podinfo"
          downwardAPI:
            items:
              - path: "name"
                fieldRef:
                  fieldPath: "metadata.name"
              - path: "namespace"
                fieldRef:
                  fieldPath: "metadata.namespace"
              - path: "uid"
                fieldRef:
                  fieldPath: "metadata.uid"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ook.fullname" . }}
  labels:
    {{- include "ook.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
    app.kubernetes.io/part-of: "ook"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ook.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "server"
        app.kubernetes.io/part-of: "ook"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ook.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "ook.fullname" . }}
          env:
            # Writeable directory for concatenating certs. See "tmp" volume.
            - name: "KAFKA_CERT_TEMP_DIR"
              value: "/tmp/kafka_certs"
            # From KafkaAccess
            - name: "KAFKA_BOOTSTRAP_SERVERS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "ook.fullname" . }}-kafka
                  key: "bootstrapServers"
            - name: "KAFKA_SECURITY_PROTOCOL"
              value: "SSL"
            # From replicated KafkaUser secret
            - name: "KAFKA_SSL_CLUSTER_CAFILE"
              value: "/etc/kafkacluster/ca.crt"
            - name: "KAFKA_SSL_CLIENT_CAFILE"
              value: "/etc/kafkauser/ca.crt"
            - name: "KAFKA_SSL_CLIENT_CERTFILE"
              value: "/etc/kafkauser/user.crt"
            - name: "KAFKA_SSL_CLIENT_KEYFILE"
              value: "/etc/kafkauser/user.key"
            # From Vault secrets
            - name: "ALGOLIA_APP_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ template "ook.fullname" . }}
                  key: "ALGOLIA_APP_ID"
            - name: "ALGOLIA_API_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ template "ook.fullname" . }}
                  key: "ALGOLIA_API_KEY"
            - name: "OOK_GITHUB_APP_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ template "ook.fullname" . }}
                  key: "OOK_GITHUB_APP_ID"
            - name: "OOK_GITHUB_APP_PRIVATE_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ template "ook.fullname" . }}
                  key: "OOK_GITHUB_APP_PRIVATE_KEY"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: "{{ template "ook.fullname" . }}"
              mountPath: "/etc/kafkacluster/ca.crt"
              subPath: "ca.crt"
            - name: "kafka-user"
              mountPath: "/etc/kafkauser/ca.crt"
              subPath: "ca.crt"
            - name: "kafka-user"
              mountPath: "/etc/kafkauser/user.crt"
              subPath: "user.crt"
            - name: "kafka-user"
              mountPath: "/etc/kafkauser/user.key"
              subPath: "user.key"
            - name: "tmp"
              mountPath: "/tmp/kafka_certs"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: "kafka-user"
          secret:
            secretName: {{ template "ook.fullname" . }}-kafka-user
        - name: "{{ template "ook.fullname" . }}"
          secret:
            secretName: {{ template "ook.fullname" . }}
        - name: "tmp"
          emptyDir: {}

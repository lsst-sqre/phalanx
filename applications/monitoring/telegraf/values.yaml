telegraf:
  # Remove processors, inputs and outputs: use generated config instead.
  config:
    processors: []
    inputs: []
    outputs: []
  resources:
    limits:
      memory: 512Mi
      cpu: 900m
  args:
  - "--config"
  - "/etc/telegraf-generated/telegraf-generated.conf"
  # We need the additional rules for prometheus scraping.
  rbac:
    clusterWide: true
  env:
  - name: INFLUX_TOKEN
    valueFrom:
      secretKeyRef:
        key: influx-token
        name: telegraf
  podLabels:
    hub.jupyter.org/network-access-hub: 'true'
  service:
    enabled: false
  tplVersion: 2
  volumes:
  - name: telegraf-generated-config
    configMap:
      name: telegraf-generated-config
  mountPoints:
  - name: telegraf-generated-config
    mountPath: /etc/telegraf-generated

# -- Use prometheus_config to specify all the services in the RSP that
# expose prometheus endpoints.  A better option, eventually, will be to
# use telegraf-operator and capture these as pod annotations.
prometheus_config:
  argocd:
    application_controller: "http://argocd-application-controller-metrics.argocd.svc:8082/metrics"
    notifications_controller: "http://argocd-notifications-controller-metrics.argocd.svc:9001/metrics"
    redis: "http://argocd-redis-metrics.argocd.svc:9121/metrics"
    repo_server: "http://argocd-repo-server-metrics.argocd.svc:8084/metrics"
    server: "http://argocd-server-metrics.argocd.svc:8083/metrics"
  nublado:
    hub: "http://hub.nublado:8081/metrics"
  ingress-nginx:
    controller: "http://ingress-nginx-controller-metrics.ingress-nginx:10254/metrics"

# The following will be set by parameters injected by Argo CD and should not
# be set in the individual environment values files.
global:
  # -- services enabled in this RSP instance
  # @default -- Set by Argo CD
  enabledServices: ""

  # -- Host name for instance identification
  # @default -- Set by Argo CD
  host: ""

  # -- Base path for Vault secrets
  # @default -- Set by Argo CD
  vaultSecretsPath: ""

# Argo CD configuration
# https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml

argo-cd:
  global:
    logging:
      # -- Set the global logging format. Either: `text` or `json`
      format: "json"

  redis:
    metrics:
      # -- Enable Redis metrics service
      enabled: true

    # -- Resource limits and requests for the Redis controller
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "1"
        memory: "50Mi"
      requests:
        cpu: "2m"
        memory: "10Mi"

  controller:
    metrics:
      # -- Enable controller metrics service
      enabled: true

      applicationLabels:
        # -- Enable adding additional labels to `argocd_app_labels` metric
        enabled: true

        # -- Labels to add to `argocd_app_labels` metric
        labels: ["name", "instance"]

    # -- Resource limits and requests for the application controller pods
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "8"
        memory: "6Gi"
      requests:
        cpu: "1"
        memory: "1Gi"

  dex:

    # -- Resource limits and requests for the Dex server
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "1"
        memory: "400Mi"
      requests:
        cpu: "5m"
        memory: "30Mi"

  applicationSet:

    # -- Resource limits and requests for the applicationSet server
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "1"
        memory: "128Mi"
      requests:
        cpu: "3m"
        memory: "30Mi"

  repoServer:
    metrics:
      # -- Enable repo server metrics service
      enabled: true

    # -- Resource limits and requests for the repo server pods
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "1"
        memory: "640Mi"
      requests:
        cpu: "200m"
        memory: "80Mi"

  notifications:
    metrics:
      # -- Enable notifications metrics service
      enabled: true

    # -- Resource limits and requests for the notifications controller
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "100m"
        memory: "350Mi"
      requests:
        cpu: "5m"
        memory: "32Mi"

  server:
    metrics:
      # -- Enable server metrics service
      enabled: true

    # -- Resource limits and requests for the Argo CD server
    # @default -- See `values.yaml`
    resources:
      limits:
        cpu: "1"
        memory: "500Mi"
      requests:
        cpu: "10m"
        memory: "64Mi"

    ingress:
      # -- Create an ingress for the Argo CD server
      enabled: true

      # -- Annotations to add to the ingress
      # @default -- Configure the `letsencrypt-dns` TLS cert cluster issuer
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-dns"

      # -- Ingress class to use for Argo CD ingress
      ingressClassName: "nginx"

      # -- Paths to route to Argo CD
      path: "/argo-cd"

      # -- Enable TLS management for this ingress. Disable this if TLS should
      # not use a Let's Encrypt TLS certificate.
      tls: true

  configs:
    cm:
      # -- Configure resource comparison
      resource.compareoptions: |
        ignoreAggregatedRoles: true

    params:
      # -- Do not use TLS (this is terminated at the ingress)
      server.insecure: true

      # -- Base href for `index.html` when running under a reverse proxy
      server.basehref: "/argo-cd"

      # -- Server root path when running under a reverse proxy
      server.rootpath: "/argo-cd"

    secret:
      # -- Create the Argo CD secret (we manage this with Vault)
      createSecret: false

# The following will be set by parameters injected by Argo CD and should not
# be set in the individual environment values files.
global:
  # -- Base path for Vault secrets
  # @default -- Set by Argo CD
  vaultSecretsPath: ""

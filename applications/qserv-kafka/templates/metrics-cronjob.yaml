apiVersion: batch/v1
kind: CronJob
metadata:
  name: periodic-metrics
  labels:
    {{- include "qserv-kafka.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.periodicMetrics.schedule | quote }}
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "qserv-kafka.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: "periodic-metrics"
            qserv-kafka-redis-client: "true"
        spec:
          restartPolicy: "Never"
          containers:
            - name: periodic-metrics
              command: ["qserv-kafka", "publish-periodic-metrics"]
              env:
              {{- include "qserv-kafka.envVars" (dict "Values" .Values) | nindent 14 }}
              envFrom:
              - configMapRef:
                  name: "qserv-kafka"
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.periodicMetrics.resources | nindent 16 }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - "all"
                readOnlyRootFilesystem: true
              volumeMounts:
                - name: "kafka"
                  mountPath: "/etc/qserv-kafka/ca.crt"
                  readOnly: true
                  subPath: "ssl.truststore.crt"
                - name: "kafka"
                  mountPath: "/etc/qserv-kafka/user.crt"
                  readOnly: true
                  subPath: "ssl.keystore.crt"
                - name: "kafka"
                  mountPath: "/etc/qserv-kafka/user.key"
                  readOnly: true
                  subPath: "ssl.keystore.key"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          volumes:
            - name: "kafka"
              secret:
                secretName: "qserv-kafka-access"

image:
  # -- The Docker registry name for the container image.
  repository: ts-dockerhub.lsst.org/rubintv-broadcaster
  # -- The tag of the container image to use.
  tag: develop
  # -- The policy to apply when pulling an image for deployment.
  pullPolicy: IfNotPresent
# -- This is the namespace where the applications will be deployed.
namespace: rapid-analysis
# -- A special tag for letting the scripts know where they are running.
siteTag: ""
# -- Provide the location where the system is running.
location: ""
# -- List of script objects to run for the broadcaster.
# This section MUST have the following attribute specified for each entry.
# _name_ (The full path for the script)
# The following attributes are optional
# _resources_ (A resource object specification)
# _nodeSelector_ (A node selector object specification)
# _tolerations_ (A list of tolerations)
# _affinity_ (An affinity object specification)
scripts: {}
# -- This section holds a set of key, value pairs for environmental variables (ENV_VAR: value).
# NOTE: RUN_ARG is taken care of by the chart using _script_.
env: {}
# -- This section holds specifications for secret injection.
# If this section is used, each object listed must have the following attributes defined:
# _name_ (The label for the secret),
# _secretName_ (The name of the vault store reference. Uses the _namespace_ attribute to construct the full name),
# _secretKey_ (The key in the vault store containing the necessary secret)
envSecrets: []
# -- The Vault prefix path
vaultPrefixPath: ""
# The key for the pull secrets including any sub-paths.
pullSecretsPath: ""
# Path for the rubin tv specific secrets vault.
rubinTvSecretsPath: ""
# -- This key allows specification of a script to override the entrypoint.
# -- The list of pull secrets needed for the images.
# If this section is used, each object listed can have the following attributes defined:
# _name_ (The label identifying the pull-secret to use)
imagePullSecrets: []
# -- This section allows for specification of Butler secret information.
# If this section is used, it must contain the following attributes:
# _key_ (The vault key for the Butler secret),
# _containerPath_ (The directory location for the Butler secret),
# _dbUser_ (The username for the Butler backend database)
butlerSecret: {}
# -- This section holds the information necessary to create a NFS mount for the container.
# If this section is used, each object listed can have the following attributes defined:
# _name_ (A label identifier for the mountpoint),
# _containerPath_ (The path inside the container to mount),
# _readOnly_ (This sets if the NFS mount is read only or read/write),
# _server_ (The hostname of the NFS server),
# _serverPath_ (The path exported by the NFS server)
nfsMountpoint: []
# -- This section holds information about existing volume claims.
# If the section is used, each object listed can have the following attributes defined:
# _name_ (The name ot the persistent volume),
# _containerPath_ (The path inside the container to mount),
# _subPath_ (persistent volume subpath, optional)
pvcMountpoint: []
# -- This section holds the information necessary to claim persistent volumes.
# If the section is used, each object listed can have the following attributes defined:
# _name_ (The name ot the persistent volume),
# _containerPath_ (The path inside the container to mount),
# _subPath_ (persistent volume subpath, optional)
pvcMountpointClaim: []
# -- The key for the credentials including any sub-paths.
credentialSecretsPath: ""
# -- The name of the expected credential file for the broadcasters
credentialFile: ""
# -- Adds an extra string to the release name.
nameOverride: ""
# -- Specify the deployed application name specifically. Overrides all other names.
fullnameOverride: ""
# -- This allows the specification of pod annotations.
podAnnotations: {}
# -- This allows the specification of resources (CPU, memory) requires to run the container.
resources: {}
# -- This allows the specification of using specific nodes to run the pod.
nodeSelector: {}
# -- This specifies the tolerations of the pod for any system taints.
tolerations: []
# -- This specifies the scheduling constraints of the pod.
affinity: {}
# -- This section allows for specification of security context information.
# If the section is used, at least one of the following attributes must be specified.
# _uid_ (User id to run application as),
# _gid_ (Group id of the user that runs the application),
# _fid_ (File system context user id),
securityContext: {}
# -- This configures a StatefulSet used for single frame workers.
workerSet: {}
# -- This configures a StatefulSet used for visit-level gather processing.
gather2aSet: {}
# -- This configures a StatefulSet used for night-summary rollup.
gatherRollupSet: {}
redis:
  # -- This specifies whether to use redis or not.
  enabled: false
  image:
    # -- The Docker registry name for the redis container image.
    repository: docker.io/redis
    # -- The tag of the redis container image to use.
    tag: latest
    # -- The policy to apply when pulling an image for deployment.
    pullPolicy: IfNotPresent
  # -- This section holds a set of key, value pairs for environmental variables (ENV_VAR: value).
  # NOTE: RUN_ARG is taken care of by the chart using _script_.
  env: {}
  # -- This section holds specifications for secret injection.
  # If this section is used, each object listed must have the following attributes defined:
  # _name_ (The label for the secret),
  # _secretName_ (The name of the vault store reference. Uses the _namespace_ attribute to construct the full name),
  # _secretKey_ (The key in the vault store containing the necessary secret)
  envSecrets: []
  storage:
    # str -- The storage class name for the data store request.
    classname:
    # -- The size of the storage request.
    request: 1Gi
  # -- This allows the specification of resources (CPU, memory) requires to run the redis container.
  resources: {}
  # -- Node selection rules for the redis pods
  nodeSelector: {}
  # -- Toleration specifications for the redis pods
  tolerations: []
  # -- Affinity rules for the redis pods
  affinity: {}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: "wobbly-maintenance"
  labels:
    {{- include "wobbly.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.maintenance.schedule | quote }}
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      activeDeadlineSeconds: {{ .Values.maintenance.deadlineSeconds }}
      ttlSecondsAfterFinished: {{ .Values.maintenance.cleanupSeconds }}
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "wobbly.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: "maintenance"
        spec:
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.cloudsql.enabled }}
          serviceAccountName: "wobbly"
          {{- else }}
          automountServiceAccountToken: false
          {{- end }}
          containers:
            - name: {{ .Chart.Name }}
              command:
                - "wobbly"
                - "expire"
              env:
                - name: "WOBBLY_DATABASE_PASSWORD"
                  valueFrom:
                    secretKeyRef:
                      name: "wobbly"
                      key: "database-password"
                {{- if .Values.config.slackAlerts }}
                - name: "WOBBLY_SLACK_WEBHOOK"
                  valueFrom:
                    secretKeyRef:
                      name: "wobbly"
                      key: "slack-webhook"
                {{- end }}
                {{- if .Values.config.metrics.enabled }}
                - name: "KAFKA_BOOTSTRAP_SERVERS"
                  valueFrom:
                    secretKeyRef:
                      name: "wobbly-kafka"
                      key: "bootstrapServers"
                - name: "KAFKA_CLIENT_CERT_PATH"
                  value: "/etc/wobbly-kafka/user.crt"
                - name: "KAFKA_CLIENT_KEY_PATH"
                  value: "/etc/wobbly-kafka/user.key"
                - name: "KAFKA_CLUSTER_CA_PATH"
                  value: "/etc/wobbly-kafka/ca.crt"
                - name: "KAFKA_SECURITY_PROTOCOL"
                  valueFrom:
                    secretKeyRef:
                      name: "wobbly-kafka"
                      key: "securityProtocol"
                {{- end }}
              envFrom:
                - configMapRef:
                    name: "wobbly"
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - "all"
                readOnlyRootFilesystem: true
              volumeMounts:
                {{- if .Values.config.metrics.enabled }}
                - name: "kafka"
                  mountPath: "/etc/wobbly-kafka/ca.crt"
                  readOnly: true
                  subPath: "ssl.truststore.crt"
                - name: "kafka"
                  mountPath: "/etc/wobbly-kafka/user.crt"
                  readOnly: true
                  subPath: "ssl.keystore.crt"
                - name: "kafka"
                  mountPath: "/etc/wobbly-kafka/user.key"
                  readOnly: true
                  subPath: "ssl.keystore.key"
                {{- end }}
          {{- if .Values.cloudsql.enabled }}
          initContainers:
            {{- include "wobbly.cloudsqlSidecar" . | nindent 12 }}
          {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: "Never"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          volumes:
            {{- if .Values.config.metrics.enabled }}
            - name: "kafka"
              secret:
                secretName: "wobbly-kafka"
            {{- end }}

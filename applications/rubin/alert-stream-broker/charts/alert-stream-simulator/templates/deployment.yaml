apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "alertStreamSimulator.fullname" . }}
  labels:
    {{- include "alertStreamSimulator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "alertStreamSimulator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "alertStreamSimulator.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: "alert-stream-simulator"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          volumeMounts:
            - name: "kafka-client-secret"
              mountPath: "/etc/kafka-client-secret"
              readOnly: True
            - name: "kafka-server-ca-cert"
              mountPath: "/etc/kafka-server-ca-cert"
              readOnly: True
          command:
            - "rubin-alert-sim"
            - "--debug"
            - "play-stream"
            - "--broker={{ .Values.clusterName }}-kafka-bootstrap:{{ .Values.clusterPort }}"
            - "--dst-topic={{ .Values.replayTopicName }}"
            - "--src-topic={{ template "alertStreamSimulator.staticTopicName" . }}"
            - "--tls-client-key-location=/etc/kafka-client-secret/user.key"
            - "--tls-client-crt-location=/etc/kafka-client-secret/user.crt"
            - "--tls-server-ca-crt-location=/etc/kafka-server-ca-cert/ca.crt"
            - "--repeat-interval={{ .Values.repeatInterval }}"
      volumes:
        - name: "kafka-client-secret"
          secret:
            secretName: "{{ .Values.kafkaUserName}}"
        - name: "kafka-server-ca-cert"
          secret:
            secretName: "{{ .Values.clusterName}}-cluster-ca-cert"

app-alert-webhook:
  description: >-
    Slack web hook to which to post internal application alerts. This secret
    is not used directly by mobu, but is copied from here to all of the
    applications that report internal problems to Slack. It should normally be
    separate from mobu's own web hook, since the separate identities attached
    to the messages helps make the type of mesasge clearer, but the same web
    hook as mobu's own alerts can be used in a pinch.
  if: config.slackAlerts

ALERT_HOOK:
  description: >-
    Slack web hook to which mobu should report failures and daily status.
  if: config.slackAlerts

github-ci-app-id:
  if: "config.githubCiApp"
  description: >-
    The GitHub application id for the ci app. This can be found on the
    app's configuration page in the GitHub UI, like this page for the idfdev
    app:
    https://github.com/organizations/lsst-sqre/settings/apps/mobu-ci-data-dev-lsst-cloud

github-ci-app-private-key:
  if: "config.githubCiApp"
  onepassword:
    encoded: true
  description: >-
    The private key for the CI app, used to sign access token requests to
    GitHub. This is generated by GitHub and available for download once. Search
    "mobu github CI app private key" in 1Password, there's one for every
    mobu environment that supports this functionality.

github-ci-app-webhook-secret:
  if: "config.githubCiApp"
  description: >-
    This needs to be provided when `config.githubCiAppEnabled` is `true`.
    Search for "mobu github CI app webhook secret" in 1Password, there's
    one for every mobu environment that supports this functionality.

    Mobu has a GitHub app integration in certain environments that creates
    GitHub actions checks that run a solitary NotebookRunner business when
    changes are pushed to a notebook repo. This integration works by GitHub
    sending webhook requests to Mobu. GitHub hashes these requests with the
    value in this secret, and Mobu does the same and checks that the hashes
    match, in order to verify that the request actually came from the expected
    GitHub app integration.

    This value is also configured in the GitHub UI for the matching GitHub
    application. If we need to change this value, the Phalanx secret must be
    updated, and the value must be changed in the GitHub UI.

github-refresh-app-webhook-secret:
  if: "config.githubRefreshApp"
  description: >-
    This needs to be provided when `config.githubRefreshAppEnabled` is `true`.
    Search for "mobu github refresh app webhook secret" in 1Password, there's
    one for every mobu environment that supports this functionality.

    Mobu has a GitHub app integration in certain environments that enables
    NotebookRunner flocks to refresh their notebooks when changes get pushed to
    their repo and branch in GitHub. This integration works by GitHub sending
    webhook requests to Mobu. GitHub hashes these requests with the value in
    this secret, and Mobu does the same and checks that the hashes match, in
    order to verify that the request actually came from the expected GitHub app
    integration.

    This value is also configured in the GitHub UI for the matching GitHub
    application. If we need to change this value, the Phalanx secret must be
    updated, and the value must be changed in the GitHub UI.

sentry-dsn:
  description: >-
    The Sentry DSN for the mobu Sentry project. This is a URL that includes an
    authentication token that tells the Sentry SDK where to send events. It can
    be found here:
    https://rubin-observatory.sentry.io/settings/projects/mobu/keys/

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "cm-service"
  labels:
    {{- include "cm-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      {{- include "cm-service.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "frontend"
  template:
    metadata:
      annotations:
        {{- with .Values.frontend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cm-service.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "frontend"
    spec:
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      containers:
        - name: "cm-service"
          env:
            - name: CM_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: CM_URL_PREFIX
              value: {{ .Values.config.pathPrefix | quote }}
            - name: CM_DATABASE_URL
              value: "postgresql://cm-service@cm-service-pg-rw/cm-service"
            - name: CM_DATABASE_ECHO
              value: {{ .Values.config.databaseEcho | quote }}
            - name: CM_LOG_PROFILE
              value: {{ .Values.config.logProfile | quote }}
            - name: CM_LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: "http"
              containerPort: 8080
              protocol: "TCP"
          readinessProbe:
            httpGet:
              path: "/"
              port: "http"
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "all"
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: "/output"
              name: "output-volume"
              {{- with .Values.config.outputVolume.subPath }}
              subPath: {{ . }}
              {{- end }}
      volumes:
        - name: output-volume
          persistentVolumeClaim:
            claimName: cm-service-output
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

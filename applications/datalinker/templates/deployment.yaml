apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datalinker.fullname" . }}
  labels:
    {{- include "datalinker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "datalinker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "datalinker.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
        - name: "pull-secret"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "DATALINKER_CUTOUT_SYNC_URL"
              value: "{{ .Values.global.baseUrl }}/api/cutout/sync"
            - name: "DATALINKER_HIPS_BASE_URL"
              value: "{{ .Values.global.baseUrl }}/api/hips"
            {{- if .Values.config.tapMetadataUrl }}
            - name: "DATALINKER_TAP_METADATA_DIR"
              value: "/tmp/tap-metadata"
            - name: "DATALINKER_TAP_METADATA_URL"
              value: {{ .Values.config.tapMetadataUrl | quote }}
            {{- end }}
            - name: "DATALINKER_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: {{ include "datalinker.fullname" . }}-gafaelfawr-token
                  key: "token"
            # The following are used by Butler to retrieve its configuration
            # and authenticate to its database.
            - name: "AWS_SHARED_CREDENTIALS_FILE"
              value: "/tmp/secrets/aws-credentials.ini"
            - name: "DAF_BUTLER_REPOSITORY_INDEX"
              value: {{ .Values.global.butlerRepositoryIndex | quote }}
            - name: "PGUSER"
              value: {{ .Values.config.pgUser }}
            - name: "PGPASSFILE"
              value: "/tmp/secrets/postgres-credentials.txt"
            - name: "STORAGE_BACKEND"
              value: {{ .Values.config.storageBackend }}
            - name: "S3_ENDPOINT_URL"
              value: {{ .Values.config.s3EndpointUrl }}
            - name: "GOOGLE_APPLICATION_CREDENTIALS"
              value: "/tmp/secrets/butler-gcs-idf-creds.json"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "butler-secret"
              mountPath: "/etc/butler/secrets"
            - name: "tmp"
              mountPath: "/tmp"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: "butler-secret"
          secret:
            secretName: {{ template "datalinker.fullname" . }}-butler-secret
        - name: "tmp"
          emptyDir: {}

# Default values for cadc-tap.

# -- Override the base name for resources
nameOverride: ""

# -- Override the full name for resources (includes the release name)
fullnameOverride: "cadc-tap"

# -- Number of pods to start
replicaCount: 1

# Settings for the ingress rules.
ingress:
  # -- Additional annotations to use for endpoints that allow anonymous
  # access, such as `/capabilities` and `/availability`
  anonymousAnnotations: {}

  # -- Additional annotations to use for endpoints that are authenticated,
  # such as `/sync`, `/async`, and `/tables`
  authenticatedAnnotations: {}

  # -- External path to the TAP service, the path eventually gets rewritten
  # by tomcat.
  path: ""

# -- Resource limits and requests for the TAP pod
# @default -- See `values.yaml`
resources:
  requests:
    cpu: 2.0
    memory: "2Gi"
  limits:
    cpu: 8.0
    memory: "32Gi"

# -- Annotations for the TAP pod
podAnnotations: {}

# -- Node selector rules for the TAP pod
nodeSelector: {}

# -- Tolerations for the TAP pod
tolerations: []

# -- Affinity rules for the TAP pod
affinity: {}

config:
  # -- What type of backend are we connecting to?
  # @default -- None, must be set to `pg` or `qserv`
  backend: ""

  pg:
    # -- Host to connect to
    # @default -- None, must be set if backend is `pg`
    host: ""

    # -- Database to connect to
    # @default -- None, must be set if backend is `pg`
    database: ""

    # -- Username to connect with
    # @default -- None, must be set if backend is `pg`
    username: ""

    image:
      # -- TAP image to use
      repository: "ghcr.io/lsst-sqre/tap-postgres-service"

      # -- Pull policy for the TAP image
      pullPolicy: "IfNotPresent"

      # -- Tag of TAP image to use
      tag: "1.16.0"

  qserv:
    # -- QServ hostname:port to connect to
    # @default -- `"mock-db:3306"` (the mock QServ)
    host: "mock-db:3306"

    # -- Extra JDBC connection parameters
    jdbcParams: ""

    image:
      # -- TAP image to use
      repository: "ghcr.io/lsst-sqre/lsst-tap-service"

      # -- Pull policy for the TAP image
      pullPolicy: "IfNotPresent"

      # -- Tag of TAP image to use
      tag: "2.2.0"

    # -- Whether the Qserv database is password protected
    # @default -- false
    passwordEnabled: false

  # -- Address to a MySQL database containing TAP schema data
  tapSchemaAddress: "cadc-tap-schema-db:3306"

  # -- Datalink payload URL
  datalinkPayloadUrl: "https://github.com/lsst/sdm_schemas/releases/download/3.0.2/datalink-snippets.zip"

  # -- Name of GCS bucket in which to store results
  gcsBucket: "async-results.lsst.codes"

  # -- Base URL for results stored in GCS bucket
  gcsBucketUrl: "https://tap-files.lsst.codes"

  # -- GCS bucket type (GCS or S3)
  gcsBucketType: "GCS"

  # -- Java heap size, which will set the maximum size of the heap. Otherwise
  # Java would determine it based on how much memory is available and black
  # maths.
  jvmMaxHeapSize: 31G

  # -- Vault secret name, this is appended to the global path to find the
  # vault secrets associated with this deployment.
  vaultSecretName: ""

mockdb:
  # -- Spin up a container to pretend to be the database.
  enabled: false

  image:
    # -- Mock database image to use
    repository: "ghcr.io/lsst-sqre/lsst-tap-mock-qserv"

    # -- Pull policy for the mock database image
    pullPolicy: "IfNotPresent"

    # -- Tag of mock db image to use
    # @default -- Version of TAP image
    tag: ""

  # -- Port to connect to the mock-db on
  port: 3306

  # -- Resource limits and requests for the mock db pod
  resources: {}

  # -- Annotations for the mock db pod
  podAnnotations: {}

  # -- Node selection rules for the mock db pod
  nodeSelector: {}

  # -- Tolerations for the mock db pod
  tolerations: []

  # -- Affinity rules for the mock db pod
  affinity: {}

tapSchema:
  image:
    # -- TAP schema image to ue. This must be overridden by each environment
    # with the TAP schema for that environment.
    repository: "lsstsqre/tap-schema-mock"

    # -- Pull policy for the TAP schema image
    pullPolicy: "IfNotPresent"

    # -- Tag of TAP schema image
    tag: "3.0.2"

  # -- Resource limits and requests for the TAP schema database pod
  # @default -- See `values.yaml`
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "5m"
      memory: "400Mi"

  # -- Annotations for the TAP schema database pod
  podAnnotations: {}

  # -- Node selection rules for the TAP schema database pod
  nodeSelector: {}

  # -- Tolerations for the TAP schema database pod
  tolerations: []

  # -- Affinity rules for the TAP schema database pod
  affinity: {}

uws:
  image:
    # -- UWS database image to use
    repository: "ghcr.io/lsst-sqre/lsst-tap-uws-db"

    # -- Pull policy for the UWS database image
    pullPolicy: "IfNotPresent"

    # -- Tag of UWS database image to use
    tag: "2.2.0"

  # -- Resource limits and requests for the UWS database pod
  # @default -- See `values.yaml`
  resources:
    requests:
      cpu: 0.25
      memory: "1Gi"
    limits:
      cpu: 2.0
      memory: "4Gi"

  # -- Annotations for the UWS databse pod
  podAnnotations: {}

  # -- Node selection rules for the UWS database pod
  nodeSelector: {}

  # -- Tolerations for the UWS database pod
  tolerations: []

  # -- Affinity rules for the UWS database pod
  affinity: {}

cloudsql:
  # -- Enable the Cloud SQL Auth Proxy sidecar, used with Cloud SQL databases
  # on Google Cloud
  enabled: false

  image:
    # -- Cloud SQL Auth Proxy image to use
    repository: "gcr.io/cloudsql-docker/gce-proxy"

    # -- Cloud SQL Auth Proxy tag to use
    tag: "1.36.0"

    # -- Pull policy for Cloud SQL Auth Proxy images
    pullPolicy: "IfNotPresent"

  # -- Instance connection name for a Cloud SQL PostgreSQL instance
  instanceConnectionName: ""

  # -- The Google service account that has an IAM binding to the `cadc-tap`
  # Kubernetes service accounts and has the `cloudsql.client` role, access
  # @default -- None, must be set
  serviceAccount: ""

  # -- CloudSQL database name
  # @default -- None, must be set
  database: ""

  # -- Resource limits and requests for the Cloud SQL Proxy container
  # @default -- See `values.yaml`
  resources:
    limits:
      cpu: "100m"
      memory: "20Mi"
    requests:
      cpu: "5m"
      memory: "7Mi"

# -- The service account will allways be created when cloudsql.enabled is set to true
# In this case the serviceAccount configuration here is required
serviceAccount:
  # -- Specifies whether a service account should be created.
  create: false

  # -- Annotations to add to the service account
  annotations: {}

  # The name of the service account to use.
  # @default -- None, must be set if service account creation is enabled
  name: ""

# The following will be set by parameters injected by Argo CD and should not
# be set in the individual environment values files.
global:
  # -- Base URL for the environment
  # @default -- Set by Argo CD
  baseUrl: ""

  # -- Host name for ingress
  # @default -- Set by Argo CD
  host: ""

  # -- Base path for Vault secrets
  # @default -- Set by Argo CD
  vaultSecretsPath: ""

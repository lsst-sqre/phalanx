apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: {{ include "prompt-keda.fullname" . }}
  annotations:
    argocd.argoproj.io/hook: PostSync
  labels:
    instrument: {{ .Values.instrument.name | lower }}
spec:
  jobTargetRef:
    parallelism: 1
    completions: 1
    backoffLimit: 0
    template:
      metadata:
      {{- with .Values.podAnnotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      spec:
        initContainers:
          - name: init-db-auth
            # Make a copy of the read-only secret that's owned by lsst
            # lsst account is created by main image with id 1000
            image: busybox
            imagePullPolicy: IfNotPresent
            command:
              [
                "sh",
                "-c",
                "cp -L /app/db-auth-mount/db-auth.yaml /app/dbauth/ && chown 1000:1000 /app/dbauth/db-auth.yaml && chmod u=r,go-rwx /app/dbauth/db-auth.yaml",
              ]
            volumeMounts:
              - mountPath: /app/db-auth-mount
                name: db-auth-mount
                readOnly: true
              - mountPath: /app/dbauth
                name: db-auth-credentials-file
        restartPolicy: Never
        containers:
          - name: {{ .Values.instrument.name | lower }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
            command:
              - /bin/sh
              - -c
              - |
                source /opt/lsst/software/stack/loadLSST.bash
                setup lsst_distrib
                python3 -m activator.activator
            env:
              - name: PLATFORM
                value: keda
              - name: WORKER_RESTART_FREQ
                value: {{ .Values.worker.restart | toString | quote }}
              - name: RUBIN_INSTRUMENT
                value: {{ .Values.instrument.name }}
              - name: PREPROCESSING_PIPELINES_CONFIG
                value: |-
                  {{- .Values.instrument.pipelines.preprocessing | nindent 18 }}
              - name: MAIN_PIPELINES_CONFIG
                value: |-
                  {{- .Values.instrument.pipelines.main | nindent 18 }}
              - name: SKYMAP
                value: {{ .Values.instrument.skymap }}
              - name: MESSAGE_EXPIRATION
                value: {{ .Values.keda.redisStreams.expiration | toString | quote }}
              - name: PRELOAD_PADDING
                value: {{ .Values.instrument.preloadPadding | toString | quote }}
              - name: IMAGE_BUCKET
                value: {{ .Values.s3.imageBucket }}
              - name: BUCKET_TOPIC
                value: {{ .Values.imageNotifications.topic }}
              - name: BUCKET_NOTIFICATION_KAFKA_OFFSET_RESET
                value: {{ .Values.imageNotifications.consumerOffsetReset }}
              - name: IMAGE_TIMEOUT
                value: {{ .Values.imageNotifications.imageTimeout | toString | quote }}
              - name: CALIB_REPO
                value: {{ .Values.instrument.calibRepo }}
              - name: LSST_DISABLE_BUCKET_VALIDATION
                value: {{ .Values.s3.disableBucketValidation | toString | quote }}
              - name: CONFIG_APDB
                value: {{ .Values.apdb.config }}
              - name: KAFKA_CLUSTER
                value: {{ .Values.imageNotifications.kafkaClusterAddress }}
              - name: RAW_MICROSERVICE
                value: {{ .Values.raw_microservice }}
              - name: SASQUATCH_URL
                value: {{ .Values.sasquatch.endpointUrl }}
              {{- if and .Values.sasquatch.endpointUrl .Values.sasquatch.auth_env }}
              - name: SASQUATCH_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: {{ template "prompt-keda.fullname" . }}-secret
                    key: sasquatch_token
              {{- end }}
              - name: DAF_BUTLER_SASQUATCH_NAMESPACE
                value: {{ .Values.sasquatch.namespace }}
              - name: S3_ENDPOINT_URL
                value: {{ .Values.s3.endpointUrl }}
              {{- if .Values.s3.auth_env }}
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ template "prompt-keda.fullname" . }}-secret
                    key: s3_access_key
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ template "prompt-keda.fullname" . }}-secret
                    key: s3_secret_key
              {{- end }}
              {{- if .Values.s3.cred_file_auth }}
              - name: AWS_SHARED_CREDENTIALS_FILE
                value: /app/s3/credentials
              {{- end }}
              {{- if .Values.s3.aws_profile }}
              - name: AWS_PROFILE
                value: {{.Values.s3.aws_profile }}
              {{- end }}
              {{- if .Values.s3.checksum }}
              - name: AWS_REQUEST_CHECKSUM_CALCULATION
                value: {{.Values.s3.checksum}}
              {{- end }}
              - name: LSST_DB_AUTH
                value: /app/lsst-credentials/db-auth.yaml
              - name: AP_KAFKA_PRODUCER_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ template "prompt-keda.fullname" . }}-secret
                    key: alert_stream_pass
              - name: AP_KAFKA_PRODUCER_USERNAME
                value: {{ .Values.alerts.username}}
              - name: AP_KAFKA_SERVER
                value: {{ .Values.alerts.server}}
              - name: AP_KAFKA_TOPIC
                value: {{ .Values.alerts.topic}}
              - name: LOCAL_REPOS
                value: /tmp-butler
              - name: SERVICE_LOG_LEVELS
                value: {{ .Values.logLevel }}
              - name: LOCAL_REPO_CACHE_SIZE
                value: {{ .Values.cache.baseSize | toString | quote }}
              - name: REFCATS_PER_IMAGE
                value: {{ .Values.cache.refcatsPerImage | toString | quote }}
              - name: PATCHES_PER_IMAGE
                value: {{ .Values.cache.patchesPerImage | toString | quote }}
              - name: DEBUG_EXPORT_OUTPUTS
                value: {{ if .Values.debug.exportOutputs }}'1'{{ else }}'0'{{ end }}
              - name: REDIS_STREAM_HOST
                value: {{ .Values.keda.redisStreams.host}}
              - name: REDIS_STREAM_NAME
                value: {{ .Values.keda.redisStreams.streamName}}
              - name: REDIS_STREAM_CONSUMER_GROUP
                value: {{ .Values.keda.redisStreams.consumerGroup}}
              - name: FANNED_OUT_MSG_LISTEN_TIMEOUT
                value: {{ .Values.keda.redisStreams.msgListenTimeout | toString | quote }}
            volumeMounts:
              - mountPath: /tmp-butler
                name: ephemeral
              - mountPath: /app/lsst-credentials
                name: db-auth-credentials-file
                readOnly: true
              {{- if .Values.s3.cred_file_auth }}
              - mountPath: /app/s3/
                name: s3-credentials-file
              {{- end }}
              {{- if .Values.registry.centralRepoFile }}
              - mountPath: {{ .Values.instrument.calibRepo }}
                name: central-repo-file
              {{- end }}
              {{- with .Values.additionalVolumeMounts }}
              {{- toYaml . | nindent 8 }}
              {{- end }}
            {{- with .Values.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
        volumes:
          - name: ephemeral
            emptyDir:
              sizeLimit: {{ .Values.keda.ephemeralStorageLimit }}
          - name: db-auth-mount
            # Temporary mount for db-auth.yaml; cannot be read directly because it's owned by root
            secret:
              secretName: {{ template "prompt-keda.fullname" . }}-secret
              defaultMode: 256
              items:
                - key: db-auth_file
                  path: db-auth.yaml
          - name: db-auth-credentials-file
            emptyDir:
              sizeLimit: 10Ki # Just a text file!
          {{- if .Values.s3.cred_file_auth }}
          - name: s3-credentials-file
            secret:
              secretName: {{ template "prompt-keda.fullname" . }}-secret
              items:
                - key: s3_credentials_file
                  path: credentials
          {{- end }}
          {{- if .Values.registry.centralRepoFile }}
          - name: central-repo-file
            secret:
              secretName: {{ template "prompt-keda.fullname" . }}-secret
              items:
              - key: central_repo_file
                path: butler.yaml
          {{- end }}
          {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 12 }}
        {{- end }}
  pollingInterval: {{ .Values.keda.pollingInterval}}
  successfulJobsHistoryLimit: {{ .Values.keda.successfulJobsHistoryLimit}}
  failedJobsHistoryLimit: {{ .Values.keda.failedJobsHistoryLimit}}
  minReplicaCount: {{ .Values.keda.minReplicaCount}}
  maxReplicaCount: {{ .Values.keda.maxReplicaCount}}
  rollout:
    strategy: default
    propagationPolicy: foreground
  scalingStrategy:
    strategy: {{ .Values.keda.scalingStrategy}}
  triggers:
    - type: redis-streams
      metadata:
        host: {{ .Values.keda.redisStreams.host}}
        port: "6379"
        stream: {{ .Values.keda.redisStreams.streamName}}
        consumerGroup: {{ .Values.keda.redisStreams.consumerGroup}}
        activationLagCount: {{ .Values.keda.redisStreams.activationLagCount | toString | quote}}
        lagCount: {{ .Values.keda.redisStreams.lagCount| toString | quote}}
        pendingEntriesCount: {{ .Values.keda.redisStreams.pendingEntriesCount | toString | quote}}

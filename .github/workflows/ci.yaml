name: CI

"on":
  pull_request:
    branches:
      - "master"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up go
        uses: actions/setup-go@v3

      - name: Install helm-docs
        run: go install github.com/norwoodj/helm-docs/cmd/helm-docs@latest
        env:
          GOBIN: /usr/local/bin/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  helm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install test dependencies
        run: pip install .

      - name: Expand modified charts
        run: expand-charts

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (lint)
        run: ct lint --all --config ct.yaml

  # The minikube job always runs, but it quickly does nothing if no files that
  # would affect minikube were changed.  This unfortunately requires a lot of
  # if conditionals on all the steps of the job, but we need the job to run so
  # that we can make it mandatory before merging, which in turn allows us to
  # use automerge.
  minikube:
    name: Test deploy
    runs-on: ubuntu-latest
    needs: [helm]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Filter paths
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            minikube:
              - ".github/**"
              - "installer/**"
              - "science-platform/Chart.yaml"
              - "science-platform/templates/**"
              - "science-platform/values-minikube.yaml"
              - "services/*/Chart.yaml"
              - "services/*/templates/**"
              - "services/*/values.yaml"
              - "services/*/values-minikube.yaml"

      - name: Setup Minikube
        if: steps.filter.outputs.minikube == 'true'
        uses: manusa/actions-setup-minikube@v2.7.2
        with:
          minikube version: 'v1.28.0'
          kubernetes version: 'v1.25.2'

      - name: Test interaction with the cluster
        if: steps.filter.outputs.minikube == 'true'
        run: kubectl get nodes

      - name: Download installer dependencies
        if: steps.filter.outputs.minikube == 'true'
        run: |
          curl -sSL -o /tmp/vault.zip https://releases.hashicorp.com/vault/1.12.1/vault_1.12.1_linux_amd64.zip
          unzip /tmp/vault.zip
          sudo mv vault /usr/local/bin/vault
          sudo chmod +x /usr/local/bin/vault
          sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.5.1/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd
          sudo apt-get install socat
          sudo pip install -r installer/requirements.txt

      - name: Run installer
        timeout-minutes: 30
        if: steps.filter.outputs.minikube == 'true'
        run: |
          cd installer
          ./install.sh minikube ${{ secrets.MINIKUBE_VAULT_KEY }}

      - name: Get final list of resources
        if: steps.filter.outputs.minikube == 'true'
        run: kubectl get all -A
